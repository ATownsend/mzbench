-module(mns_worker).

-export([initial_state/0, metrics/0]).

-export([gk_connect/4, set_options/3, gk_disconnect/2,
    get/3, gk_post/4, put/4, set_prefix/3, mns_register/4]).

-export([
    connect/3,
    disconnect/2,
    publish/5,
    publish/6,
    subscribe/3,
    subscribe/4,
    unsubscribe/3,
    random_client_id/3,
    random_client_ip/3,
    subscribe_to_self/4,
    publish_to_self/5,
    idle/2,
    forward/4,
    publish_to_one/6,
    publish_to_one/7,
    client/2,
    worker_id/2,
    fixed_client_id/4,
    load_client_cert/3,
    load_client_key/3,
    load_cas/3,
    get_cert_bin/1,
    mq_cluster_connect/2,
    mq_cluster_publish_motion/2,
    mq_cluster_publish_guardian/2,
    mq_cluster_publish_heartbeat/2]).

% gen_mqtt stats callback
-export([stats/2]).

% gen_mqtt callbacks
-export([
    init/1,
    handle_call/3,
    handle_cast/2,
    handle_info/2,
    terminate/2,
    code_change/3,
    on_connect/1,
    on_connect_error/2,
    on_disconnect/1,
    on_subscribe/2,
    on_unsubscribe/2,
    on_publish/3]).

-include_lib("public_key/include/public_key.hrl").

%-record(state, {mqtt_fsm, client}).
-record(mqtt, {action}).

-behaviour(gen_emqtt).
























-type meta() :: [{Key :: atom(), Value :: any()}].
-type http_options() :: list().

-record(state,
    { mqtt_fsm
    , client
    ,gk_connection = undefined
    , prefix = "default"
    , http_options = [] :: http_options()
    , network_mac
    , string_mac
    , network_id
    , guardian_id
    , mq_server
    , mq_password
    , mq_type
    }).

-type state() :: #state{}.

-define(TIMED(Name, Expr),
    (fun () ->
        StartTime = os:timestamp(),
        Result = Expr,
        Value = timer:now_diff(os:timestamp(), StartTime),
        mzb_metrics:notify({Name, histogram}, Value),
        Result
    end)()).

-spec initial_state() -> state().
initial_state() ->
    application:set_env(hackney, use_default_pool, false),
    #state{}.

init(State) ->  % init gen_mqtt
    {A,B,C} = os:timestamp(),
    random:seed(A,B,C),
    {ok, State}.

-spec metrics() -> list().
metrics() -> metrics("default").

metrics(Prefix) ->
    [
        {group, "HTTP (" ++ Prefix ++ ")", [
            {graph, #{title => "HTTP Response",
                      units => "N",
                      metrics => [{Prefix ++ ".http_ok", counter}, {Prefix ++ ".http_fail", counter}, {Prefix ++ ".other_fail", counter}]}},
            {graph, #{title => "HTTP Latency",
                      units => "microseconds",
                      metrics => [{Prefix ++ ".http_latency", histogram}]}}
        ]},
        {group, "MQTT Pub to Sub Latency", [
            {graph, #{title => "Pub to Sub Latency (QoS 0)", metrics => [{"mqtt.message.pub_to_sub.latency", histogram}]}},
            {graph, #{title => "Pub to Sub Latency (QoS 1)", metrics => [{"mqtt.message.pub_to_sub.latency.qos1", histogram}]}},
            {graph, #{title => "Pub to Sub Latency (QoS 2)", metrics => [{"mqtt.message.pub_to_sub.latency.qos2", histogram}]}}
        ]},
        {group, "MQTT Publishers QoS 1", [
            % QoS 1 Publisher flow
            {graph, #{title => "QoS 1: Publish to Puback latency", metrics => [{"mqtt.publisher.qos1.puback.latency", histogram}]}},
            {graph, #{title => "QoS 1: Pubacks received total", metrics => [{"mqtt.publisher.qos1.puback.in.total", counter}]}},
            {graph, #{title => "QoS 1: Outstanding Pubacks (Waiting Acks)", metrics => [{"mqtt.publisher.qos1.puback.waiting", counter}]}}
        ]},
        {group, "MQTT Publishers QoS 2", [
            % QoS 2 Publisher flow
            {graph, #{title => "QoS 2: Publish to Pubrec_in latency", metrics => [{"mqtt.publisher.qos2.pub_out_to_pubrec_in.latency", histogram}]}},
            {graph, #{title => "QoS 2: Pubrecs received total", metrics => [{"mqtt.publisher.qos2.pubrec.in.total", counter}]}},
            {graph, #{
                title => "QoS 2: Pubrec_in to Pubrel_out internal latency",
                metrics => [{"mqtt.publisher.qos2.pubrec_in_to_pubrel_out.internal_latency", histogram}]
            }},
            {graph, #{
                title => "QoS 2: Pubrel_out to Pubcomp_in latency",
                metrics => [{"mqtt.publisher.qos2.pubrel_out_to_pubcomp_in.latency", histogram}]
            }},
            {graph, #{title => "QoS 2: Outstanding Pubrecs (Waiting Acks)", metrics => [{"mqtt.publisher.qos2.pubrec.waiting", counter}]}},
            {graph, #{title => "QoS 2: Outstanding Pubcomps (Waiting Acks)", metrics => [{"mqtt.publisher.qos2.pubcomp.waiting", counter}]}}
        ]},
        {group, "MQTT Connections", [
            {graph, #{title => "Connack Latency", metrics => [{"mqtt.connection.connack.latency", histogram}]}},
            {graph, #{title => "Total Connections", metrics => [{"mqtt.connection.current_total", counter}]}},
            {graph, #{title => "Connection errors", metrics => [{"mqtt.connection.connect.errors", histogram}]}},
            {graph, #{title => "Reconnects", metrics => [{"mqtt.connection.reconnects", counter}]}}
        ]},
        {group, "MQTT Messages", [
            {graph, #{title => "Total published messages", metrics => [{"mqtt.message.published.total", counter}]}},
            {graph, #{title => "Total consumed messages", metrics => [{"mqtt.message.consumed.total", counter}]}}
        ]},
        {group, "MQTT Consumers", [
            {graph, #{title => "Suback Latency", metrics => [{"mqtt.consumer.suback.latency", histogram}]}},
            {graph, #{title => "Unsuback Latency", metrics => [{"mqtt.consumer.unsuback.latency", histogram}]}},
            {graph, #{title => "Consumer Total", metrics => [{"mqtt.consumer.current_total", counter}]}},
            {graph, #{title => "Consumer Suback Errors", metrics => [{"mqtt.consumer.suback.errors", counter}]}},
            % QoS 1 consumer flow
            {graph, #{
                title => "QoS 1: Publish_in to Puback_out internal latency",
                metrics => [{"mqtt.consumer.qos1.publish_in_to_puback_out.internal_latency", histogram}]
            }},
            % QoS 2 consumer flow
            {graph, #{
                title => "QoS 2: Publish_in to Pubrec_out internal latency",
                metrics => [{"mqtt.consumer.qos2.publish_in_to_pubrec_out.internal_latency", histogram}]
            }},
            {graph, #{
                title => "QoS 2: Pubrec_out to Pubrel_in latency",
                metrics => [{"mqtt.consumer.qos2.pubrec_out_to_pubrel_in.latency", histogram}]
            }},
            {graph, #{
                title => "QoS 2: Pubrel_in to Pubcomp_out internal latency",
                metrics => [{"mqtt.consumer.qos2.pubrel_in_to_pubcomp_out.internal_latency", histogram}]
            }}
        ]}
    ].

-spec set_prefix(state(), meta(), string()) -> {nil, state()}.
set_prefix(State, _Meta, NewPrefix) ->
    mzb_metrics:declare_metrics(metrics(NewPrefix)),
    {nil, State#state{prefix = NewPrefix}}.

-spec gk_disconnect(state(), meta()) -> {nil, state()}.
gk_disconnect(#state{gk_connection = GK_connection} = State, _Meta) ->
    hackney:close(GK_connection),
    {nil, State}.

-spec gk_connect(state(), meta(), string() | binary(), integer()) -> {nil, state()}.
gk_connect(State, Meta, Host, Port) when is_list(Host) ->
    gk_connect(State, Meta, list_to_binary(Host), Port);
gk_connect(State, _Meta, Host, Port) ->
    {ok, ConnRef} = hackney:connect(hackney_ssl, Host, Port, []),
    {nil, State#state{gk_connection = ConnRef}}.

-spec set_options(state(), meta(), http_options()) -> {nil, state()}.
set_options(State, _Meta, NewOptions) ->
    {nil, State#state{http_options = NewOptions}}.

-spec get(state(), meta(), string() | binary()) -> {nil, state()}.
get(State, Meta, Endpoint) when is_list(Endpoint) ->
    get(State, Meta, list_to_binary(Endpoint));
get(#state{gk_connection = GK_connection, prefix = Prefix, http_options = Options} = State, _Meta, Endpoint) ->
    Response = ?TIMED(Prefix ++ ".http_latency", hackney:send_request(GK_connection,
        {get, Endpoint, Options, <<>>})),
    {nil, State#state{gk_connection = record_response(Prefix, Response)}}.

-spec gk_post(state(), meta(), string() | binary(), iodata()) -> {nil, state()}.
gk_post(State, Meta, Endpoint, Payload) when is_list(Endpoint) ->
    gk_post(State, Meta, list_to_binary(Endpoint), Payload);
gk_post(#state{gk_connection = GK_connection, prefix = Prefix, http_options = Options} = State, _Meta, Endpoint, Payload) ->
    Response = ?TIMED(Prefix ++ ".http_latency", hackney:send_request(GK_connection,
        {post, Endpoint, Options, Payload})),
    { hackney:body(GK_connection), State#state{gk_connection = record_response(Prefix, Response)}}.

-spec mns_register(state(), meta(), string(), integer()) -> {nil,state()}.
mns_register(State, Meta, Endpoint, MacPrefix) ->
    {Big, Medium, Small} = os:timestamp(),
    lager:warning("timestamp: ~p . ~p . ~p", [Big, Medium, Small]),
    GKHeaders = [{<<"Content-Type">>, <<"application/json">>}],
    {WorkerId, State} = worker_id(State, Meta),
    StringMacPrefix = io_lib:format("~2..0B~8..0B", [MacPrefix, WorkerId ]),
    FinalMacPrefix = re:replace(StringMacPrefix,"[0-9]{2}", "&:", [global, {return, list}]),
    JsonOutput = io_lib:format("{\"radar_status\": {\"deviceId\": \"test-~s\", \"ts\": 0.0, \"interfaces\": [{\"name\": \"wan0\", \"type\": \"ETHERNET\", \"mac\": \"~s01\", \"ip\": \"10.22.22.1\", \"routes\": [{\"dst\": \"0.0.0.0\"}]}], \"links\": [{\"mac\": \"~s10\", \"peer_type\": \"7\"}, {\"mac\": \"~s20\", \"peer_type\": \"7\"}, {\"mac\": \"~s30\", \"peer_type\": \"2\"}], \"ap_bssid_2ghz\": \"~s02\", \"ap_bssid_5ghz\": \"~s:03\", \"mesh_bssid\": \"~s:00\", \"gateway_bssid\": \"ff:00:00:00:00:00\", \"root_mode\": 2}, \"factory_reset\": \"False\", \"master_failed\": \"False\", \"location_id\": \"~s:00\"}", [StringMacPrefix, FinalMacPrefix, FinalMacPrefix, FinalMacPrefix, FinalMacPrefix, FinalMacPrefix, FinalMacPrefix, FinalMacPrefix, FinalMacPrefix]),
    %gk_connect( #state{gk_connection = GK_connection} = State, Meta,"mns.load.qa.wifimotion.ca", 443),
    set_options(State, Meta, GKHeaders),
    %Payload = <<"potato">>,
    Path = <<"/gatekeeper">>,
    {{ok,ResponseBody}, OtherState} = gk_post(State, Meta, Path,  JsonOutput),
    MQUsername = <<"device">>,
    {match,NetworkId}=re:run(ResponseBody, "network_id\":([0-9]*)", [{capture, all_but_first, list}]),
    {match,GuardianId}=re:run(ResponseBody, "guardian_mqtt.*guardian_id\":\"([^\"]*)", [{capture, all_but_first, list}]),
    {match,MQServer}=re:run(ResponseBody, "guardian_mqtt.*mqServer\":\"([^\"]*)", [{capture, all_but_first, list}]),
    {match,MQPassword}=re:run(ResponseBody, "guardian_mqtt.*mqToken\":\"([^\"]*)", [{capture, all_but_first, list}]),
    {match,MQType}=re:run(ResponseBody, "guardian_mqtt.*mqType\":\"([^\"]*)", [{capture, all_but_first, list}]),
    lager:warning("The whole message = ~p", [ResponseBody]),
    lager:warning("ID's Guardian: ~p NetworkId: ~p Mac String: ~p Mac: ~p", [GuardianId,NetworkId, StringMacPrefix, FinalMacPrefix]),
    {nil, State#state{network_mac = FinalMacPrefix, string_mac = StringMacPrefix, network_id = lists:concat(NetworkId), guardian_id = lists:concat(GuardianId), mq_server = lists:concat(MQServer), mq_password = lists:concat(MQPassword), mq_type = lists:concat(MQType)}}.
    

-spec put(state(), meta(), string() | binary(), iodata()) -> {nil, state()}.
put(State, Meta, Endpoint, Payload) when is_list(Endpoint) ->
    put(State, Meta, list_to_binary(Endpoint), Payload);
put(#state{gk_connection = GK_connection, prefix = Prefix, http_options = Options} = State, _Meta, Endpoint, Payload) ->
    Response = ?TIMED(Prefix ++ ".http_latency", hackney:send_request(GK_connection,
        {put, Endpoint, Options, Payload})),
    {nil, State#state{gk_connection = record_response(Prefix, Response)}}.

record_response(Prefix, Response) ->
    case Response of
        {ok, 200, _, GK_connection} ->
            %{ok, Body} = hackney:body(GK_connection),
            mzb_metrics:notify({Prefix ++ ".http_ok", counter}, 1),
            GK_connection;
        {ok, _, _, GK_connection} ->
            %{ok, Body} = hackney:body(GK_connection),
            %lager:error("hackney:response fail: ~p", [Body]),
            mzb_metrics:notify({Prefix ++ ".http_fail", counter}, 1),
            GK_connection;
        E ->
            lager:error("hackney:request failed: ~p", [E]),
            mzb_metrics:notify({Prefix ++ ".other_fail", counter}, 1)
    end.

-spec mq_cluster_connect(state(), meta() ) -> {nil, state()}.
mq_cluster_connect(#state{network_mac = FinalMacPrefix, network_id = NetworkId, guardian_id = GuardianId, mq_server = MQServer, mq_password = MQPassword } = State, Meta)->
    {WorkerId, State} = worker_id(State, Meta),
    {ClientId, State} = fixed_client_id(State, Meta, "pool1", WorkerId),
    {Something, NewState} = connect(State, Meta, [{host,  MQServer},
            {port , 1883},
            {username ,  "device"},
            {password , MQPassword},
            {client , ClientId},
            {clean_session,true},
            {keepalive_interval , 60},
            {proto_version , 4},
            {reconnect_timeout,4}
            ]),
    %#state.mqtt_fsm=SessionPid, client=ClientId}}
    {nil, NewState}.

-spec mq_cluster_publish_motion(state(), meta()) -> {nil, state()}.
mq_cluster_publish_motion(#state{network_mac = MacPrefix, string_mac = StringMacPrefix, guardian_id = GuardianId, network_id = NetworkID, mq_type = MQType } = State, Meta) ->
    SysId = re:replace(StringMacPrefix,"^.{6}", "", [{return, list}]),
    {BigTime, MediumTime, SmallTime} = os:timestamp(),
    Timestamp = io_lib:format("~4..0B~5..0B", [BigTime, MediumTime ]),
    PublishLocation = io_lib:format("iot-2/type/~s/id/~s/evt/motion-matrix/fmt/json",[MQType, GuardianId]),
    
    %MotionMatrix
    MQmessage = io_lib:format("{'ts': 946684865, 'interval': 500, 'count': 60,'motion': {'mkai': [[0.7091208723722046, 0.6355817551666497, 0.578514163360635, 0.5064507119426535, 0.40715388391182605, 0.3457014269413944, 0.6110918185067169, 0.21107548690779032, 0.8837078853874355, 0.386758671232193, 0.6346950911585799, 0.6220343755407416, 0.2027239407246466, 0.6602370017529718, 0.26370269644484956, 0.10266877775517413, 0.018474158179958455, 0.5514616825338925, 0.8526599620540777, 0.3244272538804983, 0.9951067848437418, 0.041945890502680494, 0.08087501619295245, 0.9922533679354927, 0.05502988122776198, 0.07034614584753018, 0.31459667342403774, 0.5756570143559373, 0.7732888100720339, 0.5644925509687992, 0.8622296172821641, 0.35725318673089623, 0.8138508277531946, 0.31686131123653793, 0.7270663677555097, 0.8115635502384909, 0.9570901157545368, 0.6162585058523992, 0.664516385362152, 0.8515419520265002, 0.2462078820531275, 0.15658445779373975, 0.5742908200974489, 0.6213430622329518, 0.8382321097702243, 0.22473844556478673, 0.047636887053453036, 0.5495327835401352, 0.17893540677383346, 0.825159186560073, 0.018487571568798322, 0.8171144144368127, 0.4463335057915646, 0.9280756749232988, 0.39303967536547324, 0.039681961672617394, 0.6848574896608952, 0.10582981107288858, 0.9471072693462466, 0.013014857300436167], [0.7239269195389999, 0.393574252629763, 0.8509715332974984, 0.15671112537278287, 0.40312681063202993, 0.23236114458897317, 0.8693938596881428, 0.02652096394621606, 0.03372624894712839, 0.5116696623401167, 0.8194439811326079, 0.2782245556505598, 0.10122848805714346, 0.37094702051191863, 0.28523208448049875, 0.1397592065846136, 0.060385729703700375, 0.48597781187173594, 0.9728924243381802, 0.26199009624511294, 0.22107274810269661, 0.12981095919178165, 0.19112590142717656, 0.3299679226423544, 0.2219517451754912, 0.3442248893329598, 0.6106083868176005, 0.3554106701142743, 0.05387004906766779, 0.06597557458793002, 0.5699233906278203, 0.12017880967332228, 0.6645485228802319, 0.36862087805631294, 0.8720533910512224, 0.1280199636336946, 0.17964731681437363, 0.631120844203389, 0.577520282208707, 0.0834350487351917, 0.7672195388585314, 0.7873974955613294, 0.3071499095565625, 0.7798380944768195, 0.814485271700139, 0.458543836338399, 0.2648936831002089, 0.4447822081190794, 0.3822677680679253, 0.8880605440838282, 0.2562648770214164, 0.73553244297674, 0.6397686323541069, 0.599672819748382, 0.6894956974587548, 0.020137676300444718, 0.06981770723208003, 0.9824550960244389, 0.8421704009882878, 0.6954439130081043], [0.41432952199815976, 0.3719042429477941, 0.8093699883909009, 0.24632899159481136, 0.6189687654294348, 0.7490178400427931, 0.8718256983218354, 0.9093354769325167, 0.45326748049314747, 0.023293354164404367, 0.7983474194912736, 0.9387627002936858, 0.3703812483454473, 0.5544403932943667, 0.8059297299789766, 0.22770580123397, 0.16986574731531634, 0.15339170698831328, 0.2754789733080706, 0.049628235313944336, 0.45846425618634246, 0.4454261237695719, 0.025978080335616327, 0.0596826009314958, 0.05723840303775263, 0.15945716729342696, 0.3880596401814024, 0.9736404712684218, 0.5236449528251843, 0.30979863537845187, 0.18760613260115344, 0.9065247304488562, 0.31887212200291026, 0.42665228855854764, 0.18058662712973672, 0.1179377829491306, 0.07341176186663545, 0.20478965319561693, 0.9410611908930374, 0.47705726881380295, 0.00536375536396605, 0.4363729664821834, 0.5352971113732059, 0.7361645231089562, 0.34106472361759954, 0.28234443547221266, 0.6809628664060766, 0.714604964161476, 0.738727683543987, 0.833878548169529, 0.5333247025328868, 0.4494636321976958, 0.7545771500903221, 0.26008979041403224, 0.20638795635679874, 0.7397182554074478, 0.6598834040501069, 0.8131791811129728, 0.6186313333830151, 0.15105584186429577], [0.9614383414146884, 0.72528448114145, 0.16044673137544463, 0.613182326585883, 0.7376605525820438, 0.7636398354169419, 0.8587212924336961, 0.30087225351640856, 0.1662396397078768, 0.15209717516625632, 0.6610647811489918, 0.6782837714088538, 0.22586326568438064, 0.9978196953725577, 0.6772042772122122, 0.5833522313830248, 0.80958126696825, 0.6855234265790221, 0.8851590309244365, 0.07514021465615361, 0.15186477716563052, 0.20366856963564095, 0.6751577091688002, 0.0743138143172195, 0.5619021255451507, 0.4014960310509732, 0.2937031357998128, 0.29337587100351625, 0.022731729156052705, 0.4861776085769073, 0.8479520679812397, 0.15974751794515274, 0.6844714923323557, 0.8515995345070777, 0.4267178724315762, 0.7547254557765946, 0.8399022867486987, 0.6188890324192509, 0.8254854520068216, 0.9452812821651876, 0.8859934747175995, 0.8512553028666139, 0.7080281498241819, 0.8039905204428367, 0.3561948183507375, 0.6838417557995035, 0.2968144692488106, 0.4408362782343197, 0.8515388088652001, 0.6462805342433864, 0.4638722202888439, 0.3702968891703562, 0.47972970848710006, 0.39597400985701925, 0.6839133620367422, 0.9073599664382567, 0.4880471775211376, 0.612093361523441, 0.23308124657016338, 0.569247991052691], [0.1290219833950339, 0.7964024317716707, 0.899065028777411, 0.5209500727188533, 0.09037391829425923, 0.39079930548026043, 0.4062500457438789, 0.8772528055825549, 0.13373777913526697, 0.49352266267113143, 0.21863617389800605, 0.9726968252740607, 0.4887059699445313, 0.7225349276829045, 0.282405557123277, 0.6857332302780378, 0.6559870474552091, 0.6744288421586297, 0.3357432159580753, 0.980006859450133, 0.8156672208781638, 0.059553081368058924, 0.7493583680668358, 0.7766332346397506, 0.49787958842447033, 0.60131494970876, 0.04364047434743501, 0.9360596049712032, 0.5408892059495637, 0.9449248305624277, 0.37721361068601644, 0.5385376587449034, 0.48728320467778774, 0.669305212156423, 0.18348140447789907, 0.4117831305169286, 0.09617308743006325, 0.844503990969723, 0.5603784369358882, 0.2235296530348424, 0.17396615665194193, 0.6442766452282951, 0.544337216402313, 0.5155648605145583, 0.14289436601081817, 0.686535061785557, 0.10595420054965565, 0.32905275780149557, 0.9252274905014843, 0.9522050616058119, 0.6300122427524133, 0.6810086940650933, 0.5197695858721533, 0.5859608714465125, 0.9404009416938635, 0.8430666085897237, 0.4138532761738347, 0.3381058301303165, 0.1267714127838495, 0.029251844219838175], [0.9066407825988854, 0.6300247645639191, 0.20078556946740367, 0.26212005334177035, 0.07977416471452292, 0.9511222371583218, 0.401147306950679, 0.900349167010267, 0.04575986336264759, 0.1764038366114371, 0.05804856288042082, 0.8294219441296871, 0.3737465142032882, 0.9670513367755519, 0.16622012493497296, 0.7390199142153098, 0.17072691508842353, 0.017163269148314453, 0.15733357525698677, 0.894400383747942, 0.2352971750191164, 0.2436582469047447, 0.757756097050441, 0.42369773696649216, 0.03264426617200311, 0.5689836959963492, 0.6982898395026401, 0.3197641491733262, 0.22783621179418034, 0.422161081272894, 0.8786914705383365, 0.19936851226300079, 0.700139225809331, 0.9396508716424483, 0.4136700986248335, 0.7224331164850499, 0.4976102909972375, 0.5838074240743171, 0.45510099626342393, 0.845409756880687, 0.8269528833220462, 0.45719492012586826, 0.7228134235774124, 0.23518586863416602, 0.06273324332122954, 0.7857448053077807, 0.004641439619736065, 0.5780904185807832, 0.17951245545651962, 0.5749579514353798, 0.6932262914328639, 0.09962236933240154, 0.4016477980334934, 0.8010695795483972, 0.7693476757269628, 0.12739880286371175, 0.31457285312158834, 0.837908165670123, 0.9029673103940774, 0.37085383218351653], [0.5206710013643102, 0.06863964082019713, 0.2912197166433341, 0.5165987122293461, 0.6603325087562318, 0.5346397820054405, 0.6430578014002, 0.8363827186119432, 0.5037458882391551, 0.1564735646955009, 0.024481282766825596, 0.3427108207892817, 0.1306624855892915, 0.5024335347596333, 0.8635610342404105, 0.04385731688208905, 0.7575233610664889, 0.47918212930351356, 0.44397842635362583, 0.6677307471597969, 0.4715795211137239, 0.7912310236786194, 0.8757156404430001, 0.14372921496767332, 0.8130264197230606, 0.551347199045655, 0.8989864769896299, 0.5921133726191609, 0.4462353912706791, 0.172468424885322, 0.9565975030089273, 0.16551532357283705, 0.574481540264167, 0.7389139089821766, 0.5566807817031604, 0.9503877914118477, 0.03633314681668598, 0.2916005974348661, 0.964759691583457, 0.4692098396995146, 0.12637005514577182, 0.1264461427788377, 0.6515300095041513, 0.5417737929821779, 0.5357192674048851, 0.21610454487876674, 0.6240435838675096, 0.3893007078604892, 0.8143382396259646, 0.3008836913680568, 0.052384706599145625, 0.24294829374214222, 0.610784869264449, 0.223955842038022, 0.2571939280200881, 0.635989463056256, 0.7396086335148491, 0.13664150401119235, 0.2103148945682639, 0.6230062276148726], [0.17382145344069433, 0.33660802417981384, 0.2781455234992656, 0.3734540366404644, 0.41901937580434623, 0.3454833966998023, 0.5891472234383184, 0.5151048330821862, 0.8378562511321557, 0.021380219800510192, 0.6367733866191483, 0.2855567627773915, 0.48132139606529767, 0.029724122037261713, 0.11703406216093659, 0.16409544463463477, 0.20336434431165018, 0.608892367575843, 0.8316175975521732, 0.12367359844148895, 0.12702052029484867, 0.9316661807902512, 0.09029394932671142, 0.42618972110836617, 0.24411021998709892, 0.5280390624036598, 0.3679318098333879, 0.895302590322947, 0.8147190700690937, 0.6231293714852335, 0.946030478832782, 0.01940190478804038, 0.883186891671849, 0.4493228206083958, 0.17018874236211545, 0.34540109605413305, 0.995037367118743, 0.2889879649145065, 0.11656450062209367, 0.5575803184239155, 0.10504611574720513, 0.8814448830579504, 0.0872290906119394, 0.8474137651813024, 0.630832744558415, 0.3551766202473503, 0.16455215422746694, 0.11215945852924247, 0.9273859084080106, 0.9859662906317406, 0.5670373541255258, 0.20214144797225286, 0.7868922626583063, 0.5508075299861899, 0.109139982514323, 0.2398901822868511, 0.8773816973275567, 0.8212731669414849, 0.8390093885502204, 0.9290007158463972], [0.3788100024725416, 0.8888390004089107, 0.1390445178278159, 0.9209858222362556, 0.6719024723362313, 0.9620050851076076, 0.7895913304380442, 0.5645002594468719, 0.8859858110188281, 0.1741413878417275, 0.951243238620842, 0.15153281776968797, 0.7065413569020853, 0.09457312187352085, 0.6956478819270185, 0.6527313092429419, 0.8666165366588117, 0.13087224065349545, 0.5069389876192019, 0.6964844980039006, 0.747011707903916, 0.16410284504579087, 0.825214430964363, 0.3513727582986339, 0.5529903559973041, 0.9663055849707441, 0.18388718764164225, 0.18820720278608616, 0.019983953007758015, 0.09748339262866534, 0.11605338219317307, 0.38288081121212525, 0.6215991572468201, 0.5210464175686234, 0.287739458392124, 0.46678438223067886, 0.1980019296801916, 0.7767638805857, 0.21459182993893222, 0.3899261001733758, 0.11395922480720388, 0.7583811120001925, 0.5674738284400394, 0.1991906282760495, 0.4571715610833582, 0.4258606953882571, 0.7187629658968175, 0.1698199916676677, 0.04490383174704793, 0.2936955130549771, 0.35657814188964265, 0.3239988243468549, 0.9871812660642588, 0.887689839319765, 0.193166364093191, 0.18456992659699445, 0.2971696816736311, 0.43554634175259677, 0.4885110413229504, 0.9216338830816667], [0.5804662411281353, 0.32249879374181234, 0.7695848474300329, 0.5747677327562087, 0.17471328551123522, 0.41991529311515496, 0.9328349277464474, 0.8544942773052121, 0.28020091809821057, 0.5343971342453104, 0.6323622044640568, 0.07816223827547153, 0.23458889206222988, 0.5945114000241093, 0.1304570351006079, 0.7343356286196461, 0.03696633362695334, 0.0703484315411268, 0.3655106964512663, 0.9015847678155025, 0.00794950873546163, 0.03739171411928477, 0.5768913103056291, 0.8416858538695432, 0.5435408957366938, 0.01925936840444653, 0.5627904880324628, 0.7123799923930205, 0.13835002564391619, 0.29358408452446205, 0.7282836868819004, 0.08690625105872696, 0.7442774514933675, 0.05210150832798621, 0.5030153611997341, 0.5567437889026089, 0.4535409062995276, 0.46732265530350015, 0.4919189699572635, 0.710917386442071, 0.9019032903341745, 0.09010005502734686, 0.04542492931292974, 0.19494368736237178, 0.809709210434743, 0.9335100445696455, 0.1358427343760834, 0.2704757208059698, 0.1982753365912009, 0.3519384891044248, 0.34195731133339613, 0.14708202786669955, 0.6815974671252722, 0.588721522923196, 0.35641992680532053, 0.23040970515479897, 0.9163608699474156, 0.4648535661051051, 0.5215337701377409, 0.2202799745606555], [0.36115869212669083, 0.013295463492839388, 0.7994222637950215, 0.3244828504262559, 0.6933559114191696, 0.855982916998728, 0.3653886453199843, 0.9361384578165409, 0.635345757098593, 0.5945001623135726, 0.46070259664107505, 0.9962647829480805, 0.9624906621262288, 0.25382628548013, 0.6837066587303251, 0.13300032286715857, 0.06155368392397875, 0.5922584495004662, 0.5385694227482705, 0.9436766446318622, 0.32180400793750497, 0.29011585059632206, 0.9856097423981697, 0.4979665596909524, 0.7306197240023662, 0.5850417796882027, 0.29056261354267665, 0.49222595073624464, 0.3022901100800095, 0.6024728879569389, 0.7806492998474309, 0.782521810535127, 0.8895430790035521, 0.7798956553918114, 0.10845091332571544, 0.9414144512742488, 0.23376069962990864, 0.601485267653624, 0.8472023326581003, 0.18047186121565162, 0.3547479780126127, 0.6728277417414941, 0.09594050699639922, 0.6243606296565857, 0.2238772739001521, 0.36819907817253106, 0.6025766506177297, 0.33060434711800124, 0.46350832358842686, 0.5579840759893198, 0.5729373796822503, 0.8496205950532021, 0.11853078555839858, 0.9962601660478415, 0.32605581795565874, 0.7941495749267166, 0.9755279310942793, 0.011286284537601388, 0.5535107498660593, 0.8386909703629046], [0.6584886479731619, 0.809738006648997, 0.185013626259527, 0.3622330130853484, 0.5110450673439108, 0.22804692397731208, 0.12779723314772085, 0.8752638807801972, 0.02459709640983787, 0.8271058823782057, 0.6295135589992761, 0.8310118202575466, 0.707853832907859, 0.9941356266864834, 0.7850663997781743, 0.44515981498391954, 0.5996755921352657, 0.9418293443699418, 0.7040132517560802, 0.04733998184474697, 0.9207668656575284, 0.7835043703696026, 0.2431033349944044, 0.9245434177888459, 0.6021253081023387, 0.3553199903832289, 0.9814305088212568, 0.25422842971904724, 0.8064666117983867, 0.2390576378845255, 0.4663480870013177, 0.08029981186310275, 0.3202241371865536, 0.11060174590439986, 0.34028479857362737, 0.2807998397398884, 0.4194536180663848, 0.40527729516900823, 0.14029821927851227, 0.6943412527063982, 0.9353332873820349, 0.4589636857764362, 0.2811757642151491, 0.9910799970213622, 0.25401686694874237, 0.6509336064642642, 0.07936638573652033, 0.13759957033243975, 0.8291996385087477, 0.10783543466361267, 0.1287830036429669, 0.7972849621865475, 0.8190865502739166, 0.9282689685594246, 0.9075748441712755, 0.8499225428948222, 0.7683756339200085, 0.5395472142250015, 0.773496053570222, 0.9335142546696773], [0.3593512564311824, 0.45218506813379555, 0.9732320254286749, 0.5095650799357344, 0.28210210232168853, 0.15773850854363658, 0.5152440634478083, 0.9489783604795557, 0.9035514687928212, 0.9867648825683939, 0.15026444282833284, 0.04675067897476226, 0.17032673786591213, 0.22682851074184995, 0.8624092828873436, 0.27829230344247335, 0.5932816168580656, 0.7473507380914506, 0.6715250447736011, 0.5591654285428451, 0.03811527057817843, 0.7309748491594855, 0.3701850995618401, 0.8939282622592281, 0.3976962576701665, 0.42734279424821164, 0.6094512989849119, 0.6327198689052989, 0.4361510523907446, 0.895679332272024, 0.08530317756933326, 0.08759733436533024, 0.6676619060180351, 0.37838526310289367, 0.15971658233951014, 0.13760843030861336, 0.9463574718359851, 0.7473499528718598, 0.934982733300616, 0.5321283562180469, 0.07168170606197088, 0.7297977167964576, 0.4657650397840867, 0.13755461637487254, 0.10992498626142333, 0.7593883256387601, 0.5211453471146558, 0.40079290745818874, 0.5006284860906622, 0.14683858672127326, 0.17211778341377193, 0.5134332773450518, 0.17857479564298862, 0.6042707106279744, 0.8590633106219301, 0.8395682489248439, 0.48174202896120144, 0.770180301062731, 0.14201771040715538, 0.5550864237123919], [0.8884929860787233, 0.08871918666586809, 0.7430852734483036, 0.6268330634884767, 0.29108437677234344, 0.7044518167126613, 0.8139914382768797, 0.027192963110852397, 0.6613095303263975, 0.852135544929621, 0.6967599289051079, 0.18310239219635627, 0.7632210655757714, 0.25588452827481567, 0.7533759432089493, 0.7526483521112506, 0.6772776925389185, 0.8231837329877816, 0.7222900455501823, 0.6054112007911134, 0.8815169830649623, 0.9386314191719098, 0.05276663747556587, 0.49312606125694247, 0.36905299236277433, 0.22506844984719865, 0.34141200717476494, 0.08674028854924809, 0.8258972968671668, 0.16847894083415482, 0.03302794024707234, 0.056929038026271694, 0.14061489336399424, 0.7154050223913492, 0.01287674807003103, 0.1673687964324475, 0.31718557103534983, 0.07870031775268915, 0.15916939593444612, 0.9898178977718064, 0.37508980379972, 0.38845414151905244, 0.907473378956047, 0.42550149978289253, 0.6656362669218933, 0.6464436978371351, 0.6346916648130189, 0.4795331364794728, 0.6952374524474333, 0.23167418736174428, 0.4650369197056128, 0.4940641235916614, 0.7527414052716072, 0.7382117253282506, 0.47547364639675815, 0.5294035529763951, 0.15419806501715116, 0.8065808173358344, 0.434273424809017, 0.7786748332277641], [0.4297413475014661, 0.5636463258351351, 0.3518249957763778, 0.6675360927389284, 0.16302601742095746, 0.05172931977136741, 0.7916603452480564, 0.8151925253945916, 0.3953706851849219, 0.24051610236204157, 0.17876444697944327, 0.47568085598809895, 0.7186986745424033, 0.630548594511068, 0.3173705372590325, 0.9427291162366912, 0.08709106592833227, 0.5309246892590086, 0.4800588020696309, 0.18123005423817629, 0.2846478230509947, 0.779295533230553, 0.3760164697396702, 0.5307510578529843, 0.9770936715722016, 0.4303159553329473, 0.04041969808844448, 0.7692963682909627, 0.5671950156176566, 0.9598612311009077, 0.2740602585141221, 0.6124762008019599, 0.32796043000633746, 0.6537938999425463, 0.6558292438817153, 0.4426430890952827, 0.019105205013775217, 0.4330024526728603, 0.3458330252788432, 0.03607320484083831, 0.5053462222322368, 0.866545407510219, 0.35567225829050597, 0.6361231425517221, 0.16489676887489513, 0.9164763215201293, 0.07767297886008817, 0.9356257392697591, 0.6875134816178525, 0.49698319588312223, 0.48573151217480115, 0.14445237865378113, 0.1638999143390507, 0.1698039351499887, 0.9360863808912889, 0.5733602958523798, 0.05786639462852783, 0.45123152042661396, 0.4918845788681758, 0.3049908803691962]], 'throughput': [[0.3752301643760051, 0.3375116554299119, 0.7841981256216651, 0.4272496809934835, 0.15390112651475296, 0.010300185781953908, 0.8832266652940705, 0.3002245890194327, 0.5178887130966718, 0.3533118852052315, 0.5286653864644193, 0.7370752214730698, 0.29410990184953256, 0.5541835314405824, 0.8621336161304558, 0.7792380929574905, 0.5211581514766414, 0.19558292181336712, 0.17332912077383233, 0.1548323441712841, 0.9671439341991857, 0.6078543413325399, 0.25784074916112576, 0.2066205243286695, 0.6645516446466231, 0.2162671577711449, 0.25715731185265656, 0.1525595080842731, 0.27702742502525834, 0.9517224717106122, 0.8385504514871565, 0.7225535654733592, 0.8896410848620546, 0.6702878748122192, 0.8509233299376741, 0.2740983339663795, 0.810870934034864, 0.8314022833181126, 0.7410296162091704, 0.14612036066931966, 0.15441511297819432, 0.19645768474370495, 0.57218058160912, 0.38700418175186446, 0.8268672984825086, 0.824306145199194, 0.9561791748295355, 0.726494846360865, 0.0006030816029164443, 0.47942331733658117, 0.9109679284970628, 0.4964209911467041, 0.13522201891016117, 0.3374995653281234, 0.17261044794436076, 0.7429316629278832, 0.8346932755856828, 0.7057932362838658, 0.9237598721578729, 0.7832986796935945], [0.10142963651130266, 0.715896094912858, 0.3453757322778529, 0.8459942523637117, 0.7963468076922875, 0.6826258547586579, 0.8286267298186368, 0.26032950393063525, 0.8319035060496911, 0.08229734939807687, 0.6013760309497158, 0.22885015582881008, 0.8630844544051102, 0.6889076599751812, 0.5418923694287695, 0.28136298738274823, 0.6194752457492139, 0.36277616629515097, 0.29388967320779436, 0.3808937546198692, 0.5228296219636624, 0.358535877272237, 0.7253634381305081, 0.43400287689916717, 0.9169599298563614, 0.1890122882903278, 0.11389101825566195, 0.14256220098292527, 0.5781185437052421, 0.596609695415427, 0.4544984326837125, 0.7557913254283559, 0.3880853362421265, 0.9183459930916065, 0.2763762607275496, 0.005123222635249336, 0.44635757440006785, 0.3578564019158791, 0.8840461831675639, 0.09620966086101279, 0.22450439417200918, 0.342450717951292, 0.4809403967081296, 0.22229916532098648, 0.7239730009638276, 0.866159253151421, 0.2047016656784516, 0.06989594133327215, 0.9919638970956614, 0.971428920494988, 0.3779028194610685, 0.4041892465691409, 0.40405542490267143, 0.2994721613717458, 0.9945124194080986, 0.4850427250592595, 0.37777096097790785, 0.8549336761000038, 0.2523018569575307, 0.3326719586087059], [0.3839894535220352, 0.8257327373292482, 0.4114365060190197, 0.9386299613825165, 0.7910759060367839, 0.522559564016815, 0.6037075155544939, 0.17049879125335177, 0.49095552526469466, 0.9858463096288292, 0.022151927344456812, 0.3111115677600933, 0.6432542986130004, 0.8266008084178518, 0.3985250922375324, 0.8555098037979392, 0.24745170602598232, 0.7228534694447248, 0.6235537448109824, 0.865391889627104, 0.46464640206654495, 0.5454471427432982, 0.8993639755459021, 0.18996734450119213, 0.6373470946269489, 0.36898607211801815, 0.24188894900526714, 0.11077233024837119, 0.3085472065720354, 0.6428731790139075, 0.5148144460675743, 0.1998892374089415, 0.721146621401965, 0.4037904956234698, 0.7401360651584946, 0.07972900714922582, 0.5067409940466223, 0.7208037522347924, 0.5761690625997898, 0.4582873420095065, 0.12280836515828031, 0.4565381290270015, 0.43190948634438486, 0.7609248223903191, 0.8972440526040796, 0.960644809170883, 0.09978932449390898, 0.22061365817952006, 0.7108701242088111, 0.2892517837285197, 0.03755521357329006, 0.1171157511752644, 0.5603145270231356, 0.8258521963130113, 0.4204005231371546, 0.5720554662174187, 0.190248972194065, 0.40005638116748754, 0.8593954481348385, 0.5008359837439845], [0.5871275364583327, 0.9703908840159364, 0.34911307900402455, 0.16258688452216152, 0.5306649963135587, 0.2243726351314611, 0.28821163962831486, 0.7770862477203628, 0.9600766281732306, 0.37933595021025823, 0.03606964378680799, 0.16934411237423497, 0.03343551360299679, 0.5020371080864297, 0.7003387185700549, 0.25349288933417957, 0.21020211211414597, 0.9165353308004033, 0.39656600514706974, 0.9428241301202859, 0.06677551506894375, 0.5012356238331129, 0.2813496982151428, 0.9739785427851653, 0.17801348653914406, 0.8742649008349602, 0.537407909427252, 0.9047353005397784, 0.03731716679601049, 0.04300059956121316, 0.018679115196108653, 0.8955323362826919, 0.8098168001012359, 0.5803671489778285, 0.8538086694400595, 0.28861698935555424, 0.5434252681218925, 0.9141140273158951, 0.9907224000934598, 0.6881618525203417, 0.6149449209275761, 0.9655781260937043, 0.4740631054931722, 0.027096917424652367, 0.023935663935056528, 0.7043045404537384, 0.7951087538755459, 0.5072411736595306, 0.2688546620624155, 0.9731495602232222, 0.6662526573578884, 0.5335605426168837, 0.4971456059329278, 0.5907620789567877, 0.5088002363210469, 0.1258425743253775, 0.7494678111846297, 0.5167645743083816, 0.6926145516934435, 0.2911998402020822], [0.2886204531331006, 0.443065997353533, 0.6534769009010319, 0.5206240768299081, 0.746594247135093, 0.6728874102169955, 0.07918833390662627, 0.8902200810689439, 0.41777343983239246, 0.35936599248019885, 0.3980227757564987, 0.8490315669350802, 0.56497852685991, 0.48187094453290036, 0.9976424571335889, 0.7972979595791062, 0.6090425932618767, 0.5198644012723133, 0.9383124066061136, 0.8489243416071597, 0.15433259216046302, 0.43242509778698124, 0.8815507964626274, 0.5812869115418839, 0.47404837719862636, 0.20118300218316443, 0.9818370269055339, 0.13892260537077716, 0.8341532005771992, 0.02339327788593626, 0.9625426870586575, 0.22589764776824905, 0.31561031293328556, 0.024758549753742254, 0.44325672075418365, 0.4957978497524327, 0.7663200426055621, 0.43921486834568724, 0.9501068994528034, 0.5237540264150186, 0.9863162654927712, 0.9060273475123538, 0.6805143645315843, 0.6736030128333097, 0.8068809758276556, 0.32221347670856726, 0.2271368403654518, 0.6956174859329957, 0.6197769764128175, 0.8818794327748967, 0.9787945205602062, 0.9714988334963727, 0.23069146687761022, 0.3174365974693121, 0.1111151673349885, 0.10449552019760278, 0.6264729583025553, 0.9296020854441174, 0.1807289488529591, 0.1989182243186879], [0.2149430757873687, 0.06886139468239205, 0.4084288491942162, 0.3284460189245024, 0.6285605832948357, 0.8464659017581407, 0.4379213439216544, 0.2453124833167003, 0.49009778302430484, 0.6076151345728493, 0.4155236914521251, 0.7559911700789762, 0.27172058101269114, 0.567066199826747, 0.3461798225903987, 0.3870557695656325, 0.03031562164781698, 0.5334614509166661, 0.8615579704781472, 0.9233999096812693, 0.8221727818411485, 0.13727406061037828, 0.6092447177531073, 0.8908820357690953, 0.2934487706510709, 0.03162598926370874, 0.9113733250183093, 0.41249848303640435, 0.007711740898927788, 0.17999364637997384, 0.3043187944035973, 0.2849723988775358, 0.0533327467577992, 0.15429097376804846, 0.704301075213183, 0.9682702476068257, 0.8523915405783338, 0.7315737916847291, 0.19541033766654037, 0.12295627232550332, 0.376916280660598, 0.12431130109775657, 0.48599919358926724, 0.16200521099273268, 0.18425347590384367, 0.40944859607005424, 0.6812898831487224, 0.8110857309526934, 0.8624412886473806, 0.6049876767120067, 0.2070762105833197, 0.14709375503454103, 0.2802923222222904, 0.5762608005788873, 0.5013597841667098, 0.8370884883588399, 0.6692113009060598, 0.8364861967790567, 0.3859089356248271, 0.5152752801729884], [0.30428142971859007, 0.45261939521579286, 0.3539814211148896, 0.6348734743511797, 0.8810151139596669, 0.7527641132691978, 0.7036665300563647, 0.8946794722966844, 0.683334821093971, 0.7194696307387826, 0.7891347130582954, 0.21049306587907246, 0.06272526768471776, 0.8045239775918582, 0.01266202212887424, 0.6434616371926836, 0.501482524631518, 0.10926018205859889, 0.7562269797701003, 0.17005601009236748, 0.21722814334086793, 0.9177764695122128, 0.8734277075641477, 0.3580146125393795, 0.5094952913289648, 0.7294633766799902, 0.3422238667765849, 0.647987863616462, 0.2623607800759574, 0.9699464480515866, 0.5375383947388434, 0.8987156350581572, 0.26933265674087437, 0.14505341022050067, 0.3190468427830755, 0.7905703815982128, 0.5964068174318088, 0.8516762502531078, 0.909852370116166, 0.14573093267584125, 0.27470329467526533, 0.21339563382543703, 0.44930421418208344, 0.45598888897399315, 0.37331107251033857, 0.5148642292869615, 0.5003720217711091, 0.7973421786890796, 0.6249453832813706, 0.5515692208740138, 0.7692452987444509, 0.8337627409983069, 0.2929908393639278, 0.03152790026685448, 0.9848184828925988, 0.8446279612799311, 0.4325990774011028, 0.7729825464094084, 0.35773138380182024, 0.20070039115575], [0.3049561435024444, 0.3026406459471658, 0.6116533756448771, 0.8353170662368777, 0.7605853105419971, 0.8251954476248735, 0.5891853907284632, 0.4486809445223384, 0.30976916522468545, 0.13332411736121796, 0.7797029456768507, 0.8820101172598782, 0.5548650174487372, 0.3104074707902402, 0.7317213749555239, 0.07741980144352156, 0.7581584327378504, 0.5389291001531124, 0.5431323051002838, 0.9922770107964566, 0.5474177027240577, 0.8791292037966362, 0.0962877915103082, 0.563852606292514, 0.5910538045200329, 0.7737480318839295, 0.10469717202536566, 0.47936326894746806, 0.6573919494559765, 0.3212398383727787, 0.9480767855480422, 0.8720922913149552, 0.4482786208851949, 0.2247751570782992, 0.7470301684966623, 0.48801396052293566, 0.38617267262678123, 0.9796002106325462, 0.934012266393621, 0.21526736383599476, 0.28129508059781116, 0.2653841295927505, 0.37482957249705673, 0.12313483461139041, 0.4290408759221743, 0.4429709700282576, 0.909933510141805, 0.2418481948629888, 0.28942475824715075, 0.47023569442017676, 0.7886490732182501, 0.5429139933850693, 0.9254366691019045, 0.16352521299529743, 0.8155621005617962, 0.6429560889838146, 0.7180202522268441, 0.059404157296574, 0.12180899392383504, 0.8733696553907222], [0.5440316147416322, 0.4976986638186386, 0.49842007013379686, 0.8523326428221228, 0.795503413521836, 0.775490705725956, 0.850863729768356, 0.9166272733828674, 0.2646921157793143, 0.36164644493807374, 0.44354806877052677, 0.8391241192004693, 0.1906969826291688, 0.502434281132639, 0.4514505102252193, 0.37272044674498495, 0.2749727387710159, 0.5275136884008021, 0.5760257102833195, 0.5199208626396343, 0.14656363117063576, 0.8834675721781892, 0.05315706218773664, 0.7128719346554799, 0.5687525301277914, 0.27939728551830023, 0.6995025977304836, 0.8788720234370727, 0.009055052423488918, 0.7287857528296329, 0.2634507429696056, 0.8332346514555563, 0.7882987787107675, 0.573733334133604, 0.4820490972464737, 0.8489154263445388, 0.43263720864804933, 0.09822537423519351, 0.7659628421740833, 0.4540269585958625, 0.18426803624777055, 0.9211300429122147, 0.7153720221235009, 0.28834462851894416, 0.06041766564097806, 0.9131468965143433, 0.47247806518607816, 0.3856283748234348, 0.213752177313835, 0.8268271865333736, 0.45851641341063454, 0.23582014686170916, 0.14317714437640672, 0.21711908200031593, 0.8621919189573353, 0.4844741439690198, 0.7592093545064149, 0.16914491944631493, 0.4928015685256194, 0.8014952379145465], [0.8759924403086181, 0.9572130001119541, 0.059181256171672914, 0.4544373707411369, 0.8324190988702352, 0.26784973442781856, 0.7318589303693966, 0.8329532998350749, 0.7402892291300888, 0.9702318991797134, 0.3542427539469135, 0.6884438568275449, 0.9996172989904931, 0.9839529160304785, 0.9853647903504263, 0.9092119683235413, 0.6065513839386378, 0.9617825155761728, 0.7670615519218601, 0.43674801101469196, 0.9862239593081877, 0.29378814094498695, 0.6123022197562771, 0.09224745469376405, 0.26094106519547267, 0.48892017885239225, 0.9011648603626504, 0.42382827936799783, 0.8007279756624202, 0.000541076996105283, 0.2566287503512299, 0.7042151744931667, 0.8346667440089028, 0.8243762190596835, 0.30615202195503566, 0.9339107555587802, 0.4793860545330988, 0.4633364125128142, 0.013724424493975707, 0.4594675362891709, 0.43019630584574564, 0.5088259585494739, 0.6385216097468839, 0.2688719279031604, 0.834576650869188, 0.7728413559560305, 0.7794500836862177, 0.4095211722493679, 0.7035045045740229, 0.14592430550106594, 0.8136055779685033, 0.3706929790479562, 0.2128448676000183, 0.49581531701949844, 0.0015999682541176785, 0.8980973041777892, 0.8719842133344945, 0.26453523340814167, 0.6830749704070327, 0.007551931328495298], [0.4447225374135607, 0.42498479065295336, 0.0982206192962326, 0.6048713280012151, 0.5605431842653668, 0.3985191033663775, 0.9705510052607904, 0.5635253720401334, 0.5371966440014114, 0.06822522800334441, 0.0034952346442640447, 0.15687561255636373, 0.6861845256686899, 0.6807002394356109, 0.15466159234368604, 0.20755645512090426, 0.5287175159981727, 0.23007679365773115, 0.3617016683333176, 0.8026574487482669, 0.7954992396303164, 0.6797388165727595, 0.32346440143045696, 0.934905555414186, 0.5644131626781856, 0.6476413613412172, 0.5434809668455383, 0.426203732594013, 0.7771368339192011, 0.12485304335670455, 0.6806015639197291, 0.7016123478051874, 0.4280534968165377, 0.5592740358843097, 0.8507739337880771, 0.6092748361007917, 0.9626914493355698, 0.4889906642725378, 0.9724087598755279, 0.9929977338030852, 0.16411794422243786, 0.8314481558916408, 0.6577030250668039, 0.2815507337364206, 0.1638706173933422, 0.3038029607957129, 0.28884174626077075, 0.7043372857903507, 0.6432387099177154, 0.4238336260184207, 0.3975764133089841, 0.38463290985407017, 0.954884118541863, 0.9482640332321467, 0.4165206412817092, 0.44201496783282856, 0.0629949964284785, 0.06418724443360846, 0.9575925519105799, 0.43050033757804607], [0.911727467936227, 0.3080125069762688, 0.44230068812337686, 0.012169443611347752, 0.6663435477987804, 0.5366983330961341, 0.7030979081690135, 0.6107162492009675, 0.8475797109139217, 0.7277828093477844, 0.9396763033666541, 0.032706002725823136, 0.5609703718356265, 0.5714239710142213, 0.05906285201062633, 0.012087310778880589, 0.2276549716018902, 0.4891977968403488, 0.4070165206679561, 0.03576176336087045, 0.8796146012677889, 0.938660242678151, 0.820103357183367, 0.3073650148574367, 0.9693493999217815, 0.6254562707372585, 0.024544023856674868, 0.4033606902446, 0.3479438551147541, 0.8287479350691442, 0.23976475636773942, 0.6301124478742229, 0.14923498307954086, 0.7097944886248284, 0.5540577417953614, 0.26055411515915405, 0.5496556513977499, 0.4998644277028075, 0.5776971741383583, 0.7133583275777269, 0.5806640698649048, 0.12632452548333206, 0.30085946870839864, 0.06044048020861814, 0.24618345496256777, 0.9614918214919824, 0.8287812136290551, 0.12193844687715638, 0.9542429351917259, 0.16262446700257427, 0.09965737930636798, 0.055178939191482645, 0.29183450830831104, 0.528285956049707, 0.6964278746284733, 0.7787570856187122, 0.9338877255103164, 0.03925599448015682, 0.47734562687883, 0.5803515405068029], [0.7906824139358448, 0.003115306131194151, 0.09873425444764083, 0.4322486433646757, 0.4730878946582604, 0.7391434199866681, 0.8032065287186242, 0.5491227665292259, 0.8392525649661653, 0.5885204507560653, 0.8487495463065419, 0.5882241051474099, 0.4200341673853639, 0.0441972710705254, 0.7814297973771911, 0.8672000306178942, 0.05605845677048282, 0.3633690881900563, 0.09898857138488215, 0.1721148296023869, 0.21629383376416944, 0.6698107937688472, 0.601900263871144, 0.6565868661572087, 0.6510024851955805, 0.9849428787593237, 0.6597736823568454, 0.3296488702303373, 0.056498244517540375, 0.5525385512226452, 0.24247151102489595, 0.9659846266068565, 0.14529566256161908, 0.3931378657058937, 0.10179364250310319, 0.5146597933291787, 0.27745204349145536, 0.5414739724560557, 0.6761209478859935, 0.6292985614072752, 0.7696284819709324, 0.5194758669885146, 0.924677441974952, 0.6046942022546802, 0.6009768587804729, 0.876333614802876, 0.34268247668053897, 0.9778161348017198, 0.003860745446992553, 0.7125548955300527, 0.06321090733826673, 0.9389759672901064, 0.9198364097951924, 0.4984537801485944, 0.8944770288106033, 0.8886633224690881, 0.7371641450080054, 0.9435935031330925, 0.46040064236622824, 0.37434832155472486], [0.42526453670893993, 0.8483925709530241, 0.9035162455170882, 0.3897751104126228, 0.6212403848521016, 0.24627503418081798, 0.03075555237770977, 0.2223648216475188, 0.8122554610553199, 0.17058836418673673, 0.46108863748065254, 0.3213752295243384, 0.14251858816591878, 0.1307532176669406, 0.6564151232631368, 0.40271992882497765, 0.9979340685412507, 0.5668428512783261, 0.36605996942063446, 0.0776299439890904, 0.6471865350714922, 0.46029458479499086, 0.9068890262344275, 0.5524102216899264, 0.7410551968331794, 0.3165753171705137, 0.04020214795095045, 0.5368113150121255, 0.6730725839459264, 0.331019802030585, 0.8436019920194991, 0.7282321418408978, 0.31765168881881245, 0.46734823713504736, 0.8707271204717874, 0.6326782771293501, 0.7315714739562668, 0.7462198003312968, 0.651616658288738, 0.35077188413714144, 0.531943228155986, 0.9654023051580606, 0.9140699247720052, 0.5687157772569884, 0.31744206291745947, 0.6500810775270116, 0.5112513769998789, 0.31025238923678233, 0.07004982453126707, 0.7234077830769042, 0.23064687799311068, 0.25795952482018525, 0.9556392003863414, 0.2041975070871821, 0.08779720213606534, 0.7086887985718183, 0.519569907476545, 0.18177333918200222, 0.7180010485080747, 0.008427125334568797], [0.9097379263427334, 0.3238704489724539, 0.08255069013073613, 0.0014963904008062912, 0.8032314997140915, 0.3087702681512615, 0.5253790892880406, 0.007257669424073798, 0.2942972793695965, 0.8425420709455742, 0.5217572404578987, 0.7084865210293297, 0.7310403730622838, 0.5888587962742959, 0.6522523125980276, 0.39167648273172073, 0.18700008689006187, 0.3105909720158224, 0.2722214044713075, 0.2171116666522419, 0.6035190595452378, 0.0570267741429612, 0.5274233676056657, 0.1525874916261165, 0.8446164966693915, 0.9857306126851099, 0.8030698082242888, 0.4441845069378001, 0.736902732926447, 0.2697692395515535, 0.09881135946234965, 0.39318970362243455, 0.23180069680993343, 0.9402817966829353, 0.9033378237437252, 0.6971408039630725, 0.34835842698430175, 0.4001750243016874, 0.8448400806952134, 0.6144742306248654, 0.8759258274191412, 0.1936835739545455, 0.2177499849223925, 0.2254341978407005, 0.9577893943995314, 0.8155137273897871, 0.3375569029274872, 0.4276725577566757, 0.4072963058986294, 0.8962945947800421, 0.7433461365601518, 0.6130399202266357, 0.24462062376596794, 0.1851099521523255, 0.9644510119703636, 0.7226505147122101, 0.6643120295800529, 0.9330915933898242, 0.12018163485664579, 0.46177024225546004]]},'links': ['~s00-~s10', '~s00-~s20', '~s00-~s30', '~s00-~s40', '~s00-~s50', '~s10-~s20', '~s10-~s30', '~s10-~s40', '~s10-~s50', '~s20-~s30', '~s20-~s40', '~s20-~s50', '~s30-~s40', '~s30-~s50', '~s40-~s50']}", [SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId,SysId]),
    publish(State, Meta, PublishLocation, MQmessage, 0),
    {nil,State}.

-spec mq_cluster_publish_guardian(state(), meta()) -> {nil, state()}.
mq_cluster_publish_guardian(#state{network_mac = MacPrefix, string_mac = StringMacPrefix, guardian_id = GuardianId, network_id = NetworkID, mq_type = MQType } = State, Meta) ->
    SysId = re:replace(StringMacPrefix,"^.{6}", "", [{return, list}]),
    {BigTime, MediumTime, SmallTime} = os:timestamp(),
    Timestamp = io_lib:format("~4..0B~5..0B", [BigTime, MediumTime ]),
    PublishLocation = io_lib:format("iot-2/type/~s/id/~s/evt/guardian-status/fmt/json",[MQType, GuardianId]),
    
    %Guardian
    MQmessage = io_lib:format("{'ts': ~s, 'guardian_id': '~s', 'network_id': ~s, 'radars': [{'deviceId': 'test-~s01', 'ts': 0.0, 'interfaces': [{'name': 'wan0', 'type': 'ETHERNET', 'mac': '~s01', 'ip': '10.22.22.1', 'routes': [{'dst': '0.0.0.0'}]}], 'links': [{'mac': '~s:10', 'peer_type': '7'}, {'mac': '~s:20', 'peer_type': '7'}, {'mac': '~s:30', 'peer_type': '2'}], 'ap_bssid_2ghz': '~s:02', 'ap_bssid_5ghz': '~s:03', 'mesh_bssid': '~s:00', 'gateway_bssid': 'ff:00:00:00:00:00', 'root_mode': 2}, {'deviceId': 'test-~s11', 'ts': 0.0, 'interfaces': [{'name': 'wan0', 'type': 'BRIDGE', 'mac': '~s:11', 'ip': '10.22.22.1', 'routes': [{'dst': '0.0.0.0'}]}], 'links': [{'mac': '~s:00', 'peer_type': '7'}, {'mac': '~s:20', 'peer_type': '7'}, {'mac': '~s:40', 'peer_type': '2'}], 'ap_bssid_2ghz': '~s:12', 'ap_bssid_5ghz': '~s:13', 'mesh_bssid': '~s:10', 'gateway_bssid': '~s:00', 'root_mode': 1}, {'deviceId': 'test-~s21', 'ts': 0.0, 'interfaces': [{'name': 'wan0', 'type': 'BRIDGE', 'mac': '~s:21', 'ip': '10.22.22.1', 'routes': [{'dst': '0.0.0.0'}]}], 'links': [{'mac': '~s:00', 'peer_type': '7'}, {'mac': '~s:10', 'peer_type': '7'}, {'mac': '~s:50', 'peer_type': '2'}], 'ap_bssid_2ghz': '~s:22', 'ap_bssid_5ghz': '~s:23', 'mesh_bssid': '~s:20', 'gateway_bssid': '~s:00', 'root_mode': 1}], 'last_motion': 946685095}",[Timestamp,GuardianId,NetworkID,SysId,MacPrefix,MacPrefix,MacPrefix,MacPrefix,MacPrefix,MacPrefix,MacPrefix,SysId,MacPrefix,MacPrefix,MacPrefix,MacPrefix,MacPrefix,MacPrefix,MacPrefix,MacPrefix,SysId,MacPrefix,MacPrefix,MacPrefix,MacPrefix,MacPrefix,MacPrefix,MacPrefix,MacPrefix]),
    lager:warning("message: ~p",[MQmessage]),
    publish(State, Meta, PublishLocation, list_to_binary(MQmessage), 0),
    {nil,State}.

-spec mq_cluster_publish_heartbeat(state(), meta()) -> {nil, state()}.
mq_cluster_publish_heartbeat(#state{network_mac = MacPrefix, string_mac = StringMacPrefix, guardian_id = GuardianId, network_id = NetworkID, mq_type = MQType } = State, Meta) ->
    SysId = re:replace(StringMacPrefix,"^.{6}", "", [{return, list}]),
    {BigTime, MediumTime, SmallTime} = os:timestamp(),
    Timestamp = io_lib:format("~4..0B~5..0B", [BigTime, MediumTime ]),
    PublishLocation = io_lib:format("iot-2/type/~s/id/~s/evt/guardian-status/fmt/json",[MQType, GuardianId]),
    
    %Guardian
    MQmessage = io_lib:format("{'ts': ~s, 'guardian_id': '~s', 'network_id': ~s, 'last_motion': 946685095, 'motion_tripped': 0, 'motion_enabled': 1}",[Timestamp, GuardianId, NetworkID]),
    publish(State, Meta, PublishLocation, MQmessage, 0),
    {nil,State}.














%% ------------------------------------------------
%% Gen_MQTT Callbacks (partly un-used)
%% ------------------------------------------------
on_connect(State) ->
    mzb_metrics:notify({"mqtt.connection.current_total", counter}, 1),
    {ok, State}.

on_connect_error(_Reason, State) ->
    mzb_metrics:notify({"mqtt.connection.connect.errors", counter}, 1),
    {ok, State}.

on_disconnect(State) ->
    mzb_metrics:notify({"mqtt.connection.current_total", counter}, -1),
    {ok, State}.

on_subscribe(Topics, State) ->
    case Topics of
        {error, _T, _QoSTable} ->
            mzb_metrics:notify({"mqtt.consumer.suback.errors", counter}, 1);
    _ ->
    mzb_metrics:notify({"mqtt.consumer.current_total", counter}, 1)
    end,
    {ok, State}.

on_unsubscribe(_Topics, State) ->
    mzb_metrics:notify({"mqtt.consumer.current_total", counter}, -1),
    {ok, State}.

on_publish(Topic, Payload, #mqtt{action=Action} = State) ->
    mzb_metrics:notify({"mqtt.message.consumed.total", counter}, 1),
    case Action of
        {forward, TopicPrefix, Qos} ->
            {_Timestamp, OrigPayload} = binary_to_term(Payload),
            ClientId = binary_to_list(lists:last(Topic)),
            case vmq_topic:validate_topic(publish, list_to_binary(TopicPrefix ++ ClientId)) of
                {ok, OutTopic} ->
                    NewPayload = term_to_binary({os:timestamp(), OrigPayload}),
                    gen_emqtt:publish(self(), OutTopic, NewPayload, Qos, false),
                    mzb_metrics:notify({"mqtt.message.published.total", counter}, 1),
                    {ok, State};
                {error, Reason} ->
                    error_logger:warning_msg("Can't validate topic ~p due to ~p~n", [Topic, Reason]),
                    {ok, State}
            end;
        {idle} ->
            {ok, State}
    end.

handle_call(_Req, _From, State) ->
    {reply, ok, State}.

handle_cast(Req, State) ->
    {noreply, State#mqtt{action=Req}}.

handle_info(_Req, State) ->
    {noreply, State}.

terminate(_Reason, _State) ->
    mzb_metrics:notify({"mqtt.connection.current_total", counter}, -1),
    ok.

code_change(_OldVsn, State, _Extra) ->
    {ok, State}.


%% ------------------------------------------------
%% MZBench API (Statement Functions)
%% ------------------------------------------------

connect(State, _Meta, ConnectOpts) ->
    ClientId = proplists:get_value(client, ConnectOpts),
    %lager:warning("The State Options ~p <<", [State]),
    Args = #mqtt{action={idle}},
    {ok, SessionPid} = gen_emqtt:start_link(?MODULE, Args, [{info_fun, {fun stats/2, maps:new()}}|ConnectOpts]),
    {nil, State#state{mqtt_fsm=SessionPid, client=ClientId}}.

disconnect(#state{mqtt_fsm=SessionPid} = State, _Meta) ->
    gen_emqtt:disconnect(SessionPid),
    {nil, State}.

publish(State, _Meta, Topic, Payload, QoS) ->
    publish(State, _Meta, Topic, Payload, QoS, false).

publish(#state{mqtt_fsm = SessionPid} = State, _Meta, Topic, Payload, QoS, Retain) ->
    %lager:warning("The State Options in publish ~p <<", [State]),
    case vmq_topic:validate_topic(publish, list_to_binary(Topic)) of
        {ok, TTopic} ->
            Payload1 = term_to_binary({os:timestamp(), Payload}),
            gen_emqtt:publish(SessionPid, TTopic, Payload1, QoS, Retain),
            mzb_metrics:notify({"mqtt.message.published.total", counter}, 1),
            {nil, State};
        {error, Reason} ->
            error_logger:warning_msg("Can't validate topic ~p due to ~p~n", [Topic, Reason]),
            {nil, State}
    end.


subscribe(#state{mqtt_fsm = SessionPid} = State, _Meta, [T|_] = Topics) when is_tuple(T) ->
    ValidTopics = lists:filtermap(
        fun({Topic, Qos}) ->
            case vmq_topic:validate_topic(subscribe, list_to_binary(Topic)) of
                {ok, ValidTopic} ->
                    {true, {ValidTopic, Qos}};
                {error, Reason} ->
                    error_logger:warning_msg("Can't validate topic conf ~p due to ~p~n", [Topic, Reason]),
                    false
            end
        end,
        Topics
    ),
    gen_emqtt:subscribe(SessionPid, ValidTopics),
    {nil, State}.

subscribe(State, Meta, Topic, Qos) ->
    subscribe(State, Meta, [{Topic, Qos}]).

unsubscribe(#state{mqtt_fsm = SessionPid} = State, _Meta, Topics) ->
    gen_emqtt:unsubscribe(SessionPid, Topics),
    {nil, State}.

subscribe_to_self(#state{client = ClientId} = State, _Meta, TopicPrefix, Qos) ->
    subscribe(State, _Meta, TopicPrefix ++ ClientId, Qos).

publish_to_self(#state{client = ClientId} = State, _Meta, TopicPrefix, Payload, Qos) ->
    publish(State, _Meta, TopicPrefix ++ ClientId, Payload, Qos).

publish_to_one(State, Meta, TopicPrefix, ClientId, Payload, Qos) ->
    publish_to_one(State, Meta, TopicPrefix, ClientId, Payload, Qos, false).

publish_to_one(State, Meta, TopicPrefix, ClientId, Payload, Qos, Retain) ->
    publish(State, Meta, TopicPrefix ++ ClientId, Payload, Qos, Retain).

idle(#state{mqtt_fsm = SessionPid} = State, _Meta) ->
    gen_fsm:send_all_state_event(SessionPid, {idle}),
    {nil, State}.

forward(#state{mqtt_fsm = SessionPid} = State, _Meta, TopicPrefix, Qos) ->
    gen_fsm:send_all_state_event(SessionPid, {forward, TopicPrefix, Qos}),
    {nil, State}.

client(#state{client = Client}=State, _Meta) ->
    {Client, State}.

worker_id(State, Meta) ->
    ID = proplists:get_value(worker_id, Meta),
    {ID, State}.

fixed_client_id(State, _Meta, Name, Id) -> {[Name, "-", integer_to_list(Id)], State}.

random_client_id(State, _Meta, N) ->
    {randlist(N) ++ pid_to_list(self()), State}.

random_client_ip(State, _Meta, IfPrefix) ->
    {ok, Interfaces} = inet:getifaddrs(),
    IfConfigurations = [Conf || {IfName, Conf} <- Interfaces, lists:prefix(IfPrefix, IfName)],
    Addresses = [Ip || {addr, Ip} <- lists:flatten(IfConfigurations), tuple_size(Ip) == 4],
    case length(Addresses) of
        0 ->
            {"0.0.0.0", State};
        Total ->
            {lists:nth(random:uniform(Total), Addresses), State}
    end.

load_client_cert(State, _Meta, CertBin) ->
    Pems = public_key:pem_decode(CertBin),
    {value, Certificate} = lists:keysearch('Certificate', 1, Pems),
    PKey = get_cert_bin(Certificate),
    {PKey, State}.

load_client_key(State, _Meta, KeyBin) ->
    [{'RSAPrivateKey', KB, _}] = public_key:pem_decode(KeyBin),
    {{'RSAPrivateKey', KB}, State}.

load_cas(State, _Meta, CABin) ->
    CAList = public_key:pem_decode(CABin),
    CL = [get_cert_bin(Key) || Key <- CAList],
    {CL, State}.

get_cert_bin(Cert) ->
    {'Certificate', CertBin, _} = Cert,
    CertBin.

%% ------------------------------------------------
%% Gen_MQTT Info Callbacks
%% ------------------------------------------------

stats({connect_out, ClientId}, State) -> % log connection attempt
    io:format("connect_out for client_id: ~p~n", [ClientId]),
    T1 = os:timestamp(),
    maps:put(ClientId, T1, State);
stats({connack_in, ClientId}, State) ->
    diff(ClientId, State, "mqtt.connection.connack.latency", histogram);
stats({reconnect, _ClientId}, State) ->
    mzb_metrics:notify({"mqtt.connection.reconnects", counter}, 1),
    State;
stats({publish_out, MsgId, QoS}, State)  ->
    case QoS of
        0 -> ok;
        1 -> mzb_metrics:notify({"mqtt.publisher.qos1.puback.waiting", counter}, 1);
        2 -> mzb_metrics:notify({"mqtt.publisher.qos2.pubrec.waiting", counter}, 1)
    end,
    maps:put({outgoing, MsgId}, os:timestamp(), State);
stats({publish_in, MsgId, Payload, QoS}, State) ->
    T2 = os:timestamp(),
    {T1, _OldPayload} = binary_to_term(Payload),
    Diff = positive(timer:now_diff(T2, T1)),
    case QoS of
        0 -> mzb_metrics:notify({"mqtt.message.pub_to_sub.latency", histogram}, Diff);
        1 -> mzb_metrics:notify({"mqtt.message.pub_to_sub.latency.qos1", histogram}, Diff);
        2 -> mzb_metrics:notify({"mqtt.message.pub_to_sub.latency.qos2", histogram}, Diff)
    end,
    maps:put({incoming, MsgId}, T2, State);
stats({puback_in, MsgId}, State) ->
    T1 = maps:get({outgoing, MsgId}, State),
    T2 = os:timestamp(),
    mzb_metrics:notify({"mqtt.publisher.qos1.puback.latency", histogram}, positive(timer:now_diff(T2, T1))),
    mzb_metrics:notify({"mqtt.publisher.qos1.puback.in.total", counter}, 1),
    mzb_metrics:notify({"mqtt.publisher.qos1.puback.waiting", counter}, -1),
    NewState = maps:remove({outgoing, MsgId}, State),
    NewState;
stats({puback_out, MsgId}, State) ->
    diff({incoming, MsgId}, State, "mqtt.consumer.qos1.publish_in_to_puback_out.internal_latency", histogram);
stats({suback, MsgId}, State) ->
    diff(MsgId, State, "mqtt.consumer.suback.latency", histogram);
stats({subscribe_out, MsgId}, State) ->
    T1 = os:timestamp(),
    maps:put(MsgId, T1, State);
stats({unsubscribe_out, MsgId}, State) ->
    T1 = os:timestamp(),
    maps:put(MsgId, T1, State);
stats({unsuback, MsgId}, State) ->
    diff(MsgId, State, "mqtt.consumer.unsuback.latency", histogram);
stats({pubrec_in, MsgId}, State) ->
    T2 = os:timestamp(),
    T1 = maps:get({outgoing, MsgId}, State),
    mzb_metrics:notify({"mqtt.publisher.qos2.pub_out_to_pubrec_in.latency", histogram}, positive(timer:now_diff(T2, T1))),
    mzb_metrics:notify({"mqtt.publisher.qos2.pubrec.in.total"}, 1),
    mzb_metrics:notify({"mqtt.publisher.qos2.pubrec.waiting", counter}, -1),
    NewState = maps:update({outgoing, MsgId}, T2, State),
    NewState;
stats({pubrec_out, MsgId}, State) ->
    T2 = maps:get({incoming, MsgId}, State),
    T3 = os:timestamp(),
    mzb_metrics:notify({"mqtt.consumer.qos2.publish_in_to_pubrec_out.internal_latency", histogram}, positive(timer:now_diff(T3, T2))),
    NewState = maps:update({incoming, MsgId}, T3, State),
    NewState;
stats({pubrel_out, MsgId}, State) ->
    T3 = os:timestamp(),
    T2 = maps:get({outgoing, MsgId}, State),
    mzb_metrics:notify({"mqtt.publisher.qos2.pubrec_in_to_pubrel_out.internal_latency", histogram}, positive(timer:now_diff(T3, T2))),
    mzb_metrics:notify({"mqtt.publisher.qos2.pubcomp.waiting", counter}, 1),
    NewState = maps:update({outgoing, MsgId}, T3, State),
    NewState;
stats({pubrel_in, MsgId}, State) ->
    T4 = os:timestamp(),
    T3 = maps:get({incoming, MsgId}, State),
    mzb_metrics:notify({"mqtt.consumer.qos2.pubrec_out_to_pubrel_in.latency", histogram}, positive(timer:now_diff(T4, T3))),
    NewState = maps:update({incoming, MsgId}, T4, State),
    NewState;
stats({pubcomp_in, MsgId}, State) ->
    T4 = os:timestamp(),
    T3 = maps:get({outgoing, MsgId}, State),
    mzb_metrics:notify({"mqtt.publisher.qos2.pubrel_out_to_pubcomp_in.latency", histogram}, positive(timer:now_diff(T4, T3))),
    mzb_metrics:notify({"mqtt.publisher.qos2.pubcomp.waiting", counter}, -1),
    NewState = maps:remove({outgoing, MsgId}, State),
    NewState;
stats({pubcomp_out, MsgId}, State) ->
    T5 = os:timestamp(),
    T4 = maps:get({incoming, MsgId}, State),
    mzb_metrics:notify({"mqtt.consumer.qos2.pubrel_in_to_pubcomp_out.internal_latency", histogram}, positive(timer:now_diff(T5, T4))),
    NewState = maps:remove({incoming, MsgId}, State),
    NewState.

diff(MsgId, State, Metric, MetricType) ->
    T2 = os:timestamp(),
    T1 = maps:get(MsgId, State),
    mzb_metrics:notify({Metric, MetricType}, positive(timer:now_diff(T2, T1))),
    NewState = maps:remove(MsgId, State),
    NewState.

positive(Val) when Val < 0 -> 0;
positive(Val) when Val >= 0 -> Val.

randlist(N) ->
    randlist(N, []).
randlist(0, Acc) ->
    Acc;
randlist(N, Acc) ->
    randlist(N - 1, [random:uniform(26) + 96 | Acc]).










%DEMO
%Heartbeat:
%{"network_id": 11, "motion_tripped": 0, "last_motion": 1563389658.5, "ts": 1563391975.28, "guardian_id": "5d2e1d18fba27931c16e941d", "motion_enabled": 1}
%GK_STATUS:
%{"leafblower": {"98:01:a7:a4:e5:6b": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.1, "4C7240138C": 0.09, "4C72401397": 0.09}, "leaf": {}}, "60:b4:f7:f1:51:55": {"is_static": "MOBILE", "sounding": null, "ap": {"4C7240138C": 1}, "leaf": {}}, "c4:b3:01:c9:85:77": {"is_static": "MOBILE", "sounding": null, "ap": {"4C7240138C": 0.1}, "leaf": {}}, "d2:b4:f7:f1:51:14": {"is_static": "STATIC", "sounding": null, "ap": {"4C724013AC": 1, "4C72401397": 1}, "leaf": {"vht_capabilities": "0x338b79f2", "ht_capabilities": "0x000009ef", "peer_type": "7", "if_name": "bhaul-sta-u50", "hostname": "*", "mac": "d2:b4:f7:f1:51:14"}}, "c0:b6:58:58:fd:b4": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.08, "4C7240138C": 0.08, "4C72401397": 0.08}, "leaf": {"vht_capabilities": "0x00000000", "ht_capabilities": "0x0000402c", "peer_type": "2", "if_name": "home-ap-24", "hostname": "iPhoneXs-iPhone", "mac": "c0:b6:58:58:fd:b4"}}, "d2:b4:f7:f1:51:12": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.83, "4C72401397": -0.02}, "leaf": {}}, "54:99:63:b6:2c:c2": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.08, "4C7240138C": 0.08, "4C72401397": 0.08}, "leaf": {"vht_capabilities": "0x0f817032", "ht_capabilities": "0x0000006f", "peer_type": "2", "if_name": "home-ap-u50", "hostname": "Marijas-iPhone", "mac": "54:99:63:b6:2c:c2"}}, "08:c5:e1:c5:fa:09": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.1, "4C7240138C": 0.09, "4C72401397": 0.1}, "leaf": {}}, "d2:b4:f7:f1:51:54": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.09}, "leaf": {}}, "60:b4:f7:f1:51:54": {"is_static": "MOBILE", "sounding": null, "ap": {"4C7240138C": -0.04}, "leaf": {}}, "60:b4:f7:f1:51:56": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.09, "4C7240138C": 1}, "leaf": {"vht_capabilities": "0x338379f2", "ht_capabilities": "0x000009ef", "peer_type": "7", "if_name": "bhaul-ap-u50", "hostname": "4C72401397_Pod_900200600", "mac": "60:b4:f7:f1:51:56"}}, "6c:96:cf:d8:d2:c7": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.08, "4C7240138C": 0.08, "4C72401397": 0.08}, "leaf": {"vht_capabilities": "0x0f8259b2", "ht_capabilities": "0x000009ef", "peer_type": "2", "if_name": "home-ap-l50", "hostname": "Ivanas-MBP-2", "mac": "6c:96:cf:d8:d2:c7"}}, "c0:bd:d1:9e:c1:d3": {"is_static": "MOBILE", "sounding": null, "ap": {"4C72401397": 0.1}, "leaf": {"vht_capabilities": "0x0f815832", "ht_capabilities": "0x0000006f", "peer_type": "2", "if_name": "home-ap-l50", "hostname": "", "mac": "c0:bd:d1:9e:c1:d3"}}, "f4:5c:89:ac:d9:c1": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.09, "4C7240138C": 0.08, "4C72401397": 0.08}, "leaf": {"vht_capabilities": "0x0f8259b2", "ht_capabilities": "0x000009ef", "peer_type": "2", "if_name": "home-ap-u50", "hostname": "Rades-MBP-3", "mac": "f4:5c:89:ac:d9:c1"}}, "d2:b4:f7:f1:51:13": {"is_static": "MOBILE", "sounding": null, "ap": {"4C72401397": 0.98}, "leaf": {}}, "d2:b4:f7:f1:51:d4": {"is_static": "MOBILE", "sounding": null, "ap": {"4C72401397": 0.09}, "leaf": {}}, "60:b4:f7:f1:51:d4": {"is_static": "MOBILE", "sounding": null, "ap": {"4C7240138C": 1, "4C72401397": 0.15}, "leaf": {"vht_capabilities": "0x338379f2", "ht_capabilities": "0x000009ef", "peer_type": "7", "if_name": "bhaul-ap-u50", "hostname": "4C724013AC_Pod_900200600", "mac": "60:b4:f7:f1:51:d4"}}, "68:c6:3a:e6:79:6a": {"is_static": "MOBILE", "sounding": false, "ap": {"4C7240138C": 0.09, "4C72401397": -0.02}, "leaf": {"vht_capabilities": "0x00000000", "ht_capabilities": "0x0000112c", "peer_type": "2", "if_name": "home-ap-24", "hostname": "ESP_E6796A", "mac": "68:c6:3a:e6:79:6a"}}, "d2:b4:f7:f1:51:56": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.17}, "leaf": {}}, "60:b4:f7:f1:51:d2": {"is_static": "MOBILE", "sounding": null, "ap": {"4C7240138C": 0.97, "4C72401397": 0.09}, "leaf": {}}, "40:4e:36:87:bb:5b": {"is_static": "MOBILE", "sounding": null, "ap": {"4C72401397": 0.1}, "leaf": {}}, "18:65:90:cf:00:33": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.08, "4C7240138C": 0.09, "4C72401397": 0.08}, "leaf": {"vht_capabilities": "0x0f8259b2", "ht_capabilities": "0x000009ef", "peer_type": "2", "if_name": "home-ap-l50", "hostname": "Marijas-MBP", "mac": "18:65:90:cf:00:33"}}, "24:18:1d:7f:13:97": {"is_static": "MOBILE", "sounding": null, "ap": {"4C724013AC": 0.09, "4C7240138C": 0.08, "4C72401397": 0.09}, "leaf": {"vht_capabilities": "0x0f9179b2", "ht_capabilities": "0x000001ef", "peer_type": "2", "if_name": "home-ap-u50", "hostname": "Galaxy-S9", "mac": "24:18:1d:7f:13:97"}}}, "network_id": 11, "last_motion": 1575048954.86, "version": {"leafblower": "0.3.1-rd2", "LinkEvent": "0.1.2", "BayesianLeafs": "0.1.13", "MotionEvent": "0.5.4", "core": "0.7.0", "context": "0.8.2"}, "motion_tripped": 1, "guardian_id": "5d2e1d18fba27931c16e941d", "ts": 1575049071.84, "motion_enabled": 0, "radars": {"4C724013AC": {"interfaces": [{"routes": [], "name": "eth1", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "60:b4:f7:f1:51:d1", "ip": ""}, {"routes": [], "status": "Connected", "rx_bytes": "173503092", "tx_bytes": "233156", "mac": "36:55:f8:c8:08:ee", "name": "br-home.tx", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "eth1.4", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "60:b4:f7:f1:51:d1", "ip": ""}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.173.128"}], "mac": "d2:b4:f7:f1:51:d4", "rx_bytes": "0", "ip": "169.254.173.129", "name": "bhaul-ap-u50", "wifi_channel": 157, "status": "Connected", "wifi_phy": "wifi2", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.6.0"}], "mac": "f2:b4:f7:f1:51:d2", "rx_bytes": "0", "ip": "169.254.6.1", "name": "onboard-ap-24", "wifi_channel": 1, "status": "Connected", "wifi_phy": "wifi0", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [], "status": "Connected", "rx_bytes": "0", "tx_bytes": "0", "mac": "62:b4:f7:f1:51:d4", "name": "g-bhaul-sta-u50", "ip": "", "type": "ETHERNET"}, {"routes": [], "status": "Connected", "rx_bytes": "173503540", "tx_bytes": "738", "mac": "aa:bb:15:82:7b:4c", "name": "br-home.dpi", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "ifb0", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "e6:76:eb:17:3e:01", "ip": ""}, {"routes": [], "status": "Connected", "rx_bytes": "344880", "tx_bytes": "808", "mac": "72:6e:a6:54:fa:79", "name": "br-home.dns", "ip": "", "type": "ETHERNET"}, {"routes": [], "status": "Connected", "rx_bytes": "173504000", "tx_bytes": "738", "mac": "9e:66:0e:d3:e1:cd", "name": "br-home.dhcp", "ip": "", "type": "ETHERNET"}, {"routes": [], "status": "Connected", "rx_bytes": "173504202", "tx_bytes": "738", "mac": "a6:5c:d1:a3:10:d7", "name": "br-home.l2uf", "ip": "", "type": "ETHERNET"}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.171.128"}], "mac": "60:b4:f7:f1:51:d4", "rx_bytes": "2019264544", "ip": "169.254.171.144", "name": "bhaul-sta-u50", "wifi_channel": 157, "status": "Connected", "wifi_phy": "wifi2", "motion_enabled": true, "tx_bytes": "5060048954", "type": "WIFI_CLIENT"}, {"routes": [], "mac": "e2:b4:f7:f1:51:d2", "rx_bytes": "75105", "ip": "", "name": "home-ap-24", "wifi_channel": 1, "status": "Connected", "wifi_phy": "wifi0", "motion_enabled": true, "tx_bytes": "514987", "type": "WIFI_AP"}, {"routes": [], "name": "br-gre-24", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "7e:7b:fa:11:46:4c", "ip": ""}, {"routes": [], "name": "ifb1", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "ca:09:0b:af:40:3a", "ip": ""}, {"routes": [], "name": "bond0", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "46:46:5a:7a:58:9e", "ip": ""}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.7.128"}], "mac": "d2:b4:f7:f1:51:d3", "rx_bytes": "0", "ip": "169.254.7.129", "name": "bhaul-ap-l50", "wifi_channel": 44, "status": "Connected", "wifi_phy": "wifi1", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [], "status": "Connected", "rx_bytes": "4844", "tx_bytes": "738", "mac": "06:3c:af:d2:44:b1", "name": "br-home.http", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "eth0.4", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "60:b4:f7:f1:51:d0", "ip": ""}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.7.0"}], "mac": "f2:b4:f7:f1:51:d3", "rx_bytes": "0", "ip": "169.254.7.1", "name": "onboard-ap-l50", "wifi_channel": 44, "status": "Connected", "wifi_phy": "wifi1", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.173.0"}], "mac": "f2:b4:f7:f1:51:d4", "rx_bytes": "0", "ip": "169.254.173.1", "name": "onboard-ap-u50", "wifi_channel": 157, "status": "Connected", "wifi_phy": "wifi2", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [], "name": "ovs-system", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "2a:52:3f:e6:5c:1f", "ip": ""}, {"routes": [], "status": "Connected", "rx_bytes": "173504064", "tx_bytes": "738", "mac": "62:b4:f7:f1:51:d0", "name": "br-home", "ip": "", "type": "ETHERNET"}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.6.128"}], "mac": "d2:b4:f7:f1:51:d2", "rx_bytes": "0", "ip": "169.254.6.129", "name": "bhaul-ap-24", "wifi_channel": 1, "status": "Connected", "wifi_phy": "wifi0", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [{"gateway": "192.168.10.1", "netmask": "0.0.0.0", "metric": "0", "dst": "0.0.0.0"}, {"gateway": "0.0.0.0", "netmask": "255.255.254.0", "metric": "0", "dst": "192.168.10.0"}], "status": "Connected", "rx_bytes": "1087668354", "tx_bytes": "4601868532", "mac": "60:b4:f7:f1:51:d0", "name": "br-wan", "ip": "192.168.11.16", "type": "ETHERNET"}, {"routes": [], "mac": "e2:b4:f7:f1:51:d3", "rx_bytes": "77148859", "ip": "", "name": "home-ap-l50", "wifi_channel": 44, "status": "Connected", "wifi_phy": "wifi1", "motion_enabled": true, "tx_bytes": "761679760", "type": "WIFI_AP"}, {"routes": [], "name": "br-gre-50", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "66:4b:ff:d0:bd:4a", "ip": ""}, {"routes": [], "status": "Connected", "rx_bytes": "173502964", "tx_bytes": "738", "mac": "3a:0b:8c:52:ff:36", "name": "br-home.upnp", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "eth0", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "60:b4:f7:f1:51:d0", "ip": ""}], "ap_bssid_2ghz": "e2:b4:f7:f1:51:d2", "gateway_bssid": "00:c8:8b:61:b4:49", "p2p_bssid": "", "mesh_bssid": "60:b4:f7:f1:51:d4", "links": [{"vht_supported": "0", "vht_capabilities": "0x338b79f2", "wifi_txpwr": "16.000", "rx_bytes": "804217153", "phy": "wifi2", "implicit_dsss": "0", "rssi": "-25", "rssi_db": "-25", "implicit_legacy_80_80": "0", "uptime": "178417326", "tx_failed": "0", "cv_matrix_report_count": "0", "csi_report_count": "0", "tx_retries": "0", "if_name": "bhaul-sta-u50", "aid": "0", "v_matrix_report_count": "0", "motion_state": "1", "mac": "d2:b4:f7:f1:51:14", "implicit_legacy_80": "1730286", "implicit_legacy_20": "399", "rate_ms": "100", "ht_capabilities": "0x000009ef", "connected_time": "178417315", "implicit_legacy_40": "0", "implicit_error_count": "26016", "implicit_bw_downgrades": "399", "implicit_legacy_160": "0", "max_rx_streams": "4", "tx_bytes": "2136315911", "tx_bitrate": "1300000000", "mconf_zero_count": 25611, "wifi_protocol": "802_11", "ht_supported": "8", "rx_bitrate": "1560000000", "implicit_measurements": "1730685", "implicit_cck": "0", "last_heard": "0", "ip": "169.254.171.129", "peer_type": "7"}, {"wifi_protocol": "WIRED", "motion_type": "MOTION_NONE", "mac": "00:c8:8b:61:b4:49", "if_name": "br-wan", "ip": "192.168.10.1"}], "_age": 0, "ts": 1575049028.99, "node_id": "4C724013AC", "uptime": "178535.66", "fw_version": "221-uv3.4.2-kv3.4.2-15b78b5b3c79653c0fee0b6469c977a5894de54b-qca-wifi-cfr-dev", "deviceId": "csi-p-60b4f7f151d0", "root_mode": 1, "location_id": "5d2e1d18fba27931c16e941d", "version": {"radios": {"wifi2": {"fw_version": "0.0.0.9999", "chipset": "QCA9984"}, "wifi1": {"fw_version": "0.0.0.9999", "chipset": "QCA4019"}, "wifi0": {"fw_version": "0.0.0.9999", "chipset": "QCA4019"}}, "algos": {"omot": "1.9.2"}}, "hw_id": "Qualcomm", "hw_version": "Plume SuperPod B1A", "status_time": 0.41, "mem": {"free": "287368", "avail": "329488", "total": "496180"}, "load": ["0.77", "0.61", "0.51"], "ap_bssid_5ghz": "e2:b4:f7:f1:51:d3"}, "4C7240138C": {"interfaces": [{"routes": [], "status": "Connected", "rx_bytes": "18574081217", "tx_bytes": "55178264312", "mac": "60:b4:f7:f1:51:11", "name": "eth1", "ip": "", "type": "ETHERNET"}, {"routes": [], "status": "Connected", "rx_bytes": "441761522", "tx_bytes": "1026069", "mac": "de:62:19:80:33:ef", "name": "br-home.tx", "ip": "", "type": "ETHERNET"}, {"routes": [], "status": "Connected", "rx_bytes": "0", "tx_bytes": "2739106", "mac": "60:b4:f7:f1:51:11", "name": "eth1.4", "ip": "", "type": "ETHERNET"}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.2.0"}], "mac": "f2:b4:f7:f1:51:12", "rx_bytes": "0", "ip": "169.254.2.1", "name": "onboard-ap-24", "wifi_channel": 1, "status": "Connected", "wifi_phy": "wifi0", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.171.0"}], "mac": "f2:b4:f7:f1:51:14", "rx_bytes": "560090", "ip": "169.254.171.1", "name": "onboard-ap-u50", "wifi_channel": 157, "status": "Connected", "wifi_phy": "wifi2", "motion_enabled": true, "tx_bytes": "532603", "type": "WIFI_AP"}, {"routes": [], "name": "ovs-system", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "e2:37:b2:63:f2:3d", "ip": ""}, {"routes": [], "status": "Connected", "rx_bytes": "2157170653", "tx_bytes": "738", "mac": "5e:05:fe:5f:b8:10", "name": "br-home.dpi", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "ifb0", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "da:f4:79:8a:b5:e1", "ip": ""}, {"routes": [], "mac": "e2:b4:f7:f1:51:14", "rx_bytes": "253907329", "ip": "", "name": "home-ap-u50", "wifi_channel": 157, "status": "Connected", "wifi_phy": "wifi2", "motion_enabled": true, "tx_bytes": "2764718705", "type": "WIFI_AP"}, {"routes": [], "status": "Connected", "rx_bytes": "1430694", "tx_bytes": "738", "mac": "96:d9:b2:75:e1:63", "name": "br-home.dns", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "ifb1", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "02:ee:25:41:51:aa", "ip": ""}, {"routes": [], "mac": "e2:b4:f7:f1:51:12", "rx_bytes": "37876978", "ip": "", "name": "home-ap-24", "wifi_channel": 1, "status": "Connected", "wifi_phy": "wifi0", "motion_enabled": true, "tx_bytes": "481324793", "type": "WIFI_AP"}, {"routes": [], "status": "Connected", "rx_bytes": "441763354", "tx_bytes": "738", "mac": "d6:41:ab:b3:ac:14", "name": "br-home.l2uf", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "br-gre-24", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "9e:a0:a3:fe:f1:4d", "ip": ""}, {"routes": [], "status": "Connected", "rx_bytes": "447432317", "tx_bytes": "738", "mac": "82:5e:b5:a1:18:09", "name": "br-home.dhcp", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "bond0", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "6a:d1:67:5e:c0:7f", "ip": ""}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.3.128"}], "mac": "d2:b4:f7:f1:51:13", "rx_bytes": "0", "ip": "169.254.3.129", "name": "bhaul-ap-l50", "wifi_channel": 44, "status": "Connected", "wifi_phy": "wifi1", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [], "status": "Connected", "rx_bytes": "8976", "tx_bytes": "738", "mac": "3a:34:1a:b0:0b:43", "name": "br-home.http", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "eth0.4", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "60:b4:f7:f1:51:10", "ip": ""}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.3.0"}], "mac": "f2:b4:f7:f1:51:13", "rx_bytes": "0", "ip": "169.254.3.1", "name": "onboard-ap-l50", "wifi_channel": 44, "status": "Connected", "wifi_phy": "wifi1", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [], "status": "Connected", "rx_bytes": "0", "tx_bytes": "0", "mac": "de:de:7d:7b:88:e7", "name": "pgd171-143", "ip": "", "type": "ETHERNET"}, {"routes": [], "status": "Connected", "rx_bytes": "0", "tx_bytes": "0", "mac": "f6:67:6a:5b:b4:46", "name": "pgd171-144", "ip": "", "type": "ETHERNET"}, {"routes": [], "status": "Connected", "rx_bytes": "441773318", "tx_bytes": "738", "mac": "62:b4:f7:f1:51:10", "name": "br-home", "ip": "", "type": "ETHERNET"}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.2.128"}], "mac": "d2:b4:f7:f1:51:12", "rx_bytes": "0", "ip": "169.254.2.129", "name": "bhaul-ap-24", "wifi_channel": 1, "status": "Connected", "wifi_phy": "wifi0", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [{"gateway": "192.168.10.1", "netmask": "0.0.0.0", "metric": "0", "dst": "0.0.0.0"}, {"gateway": "0.0.0.0", "netmask": "255.255.254.0", "metric": "0", "dst": "192.168.10.0"}], "status": "Connected", "rx_bytes": "30007775255", "tx_bytes": "51566277551", "mac": "60:b4:f7:f1:51:10", "name": "br-wan", "ip": "192.168.11.13", "type": "ETHERNET"}, {"routes": [], "name": "br-gre-50", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "22:67:c9:2e:26:4a", "ip": ""}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.171.128"}], "mac": "d2:b4:f7:f1:51:14", "rx_bytes": "25042295682", "ip": "169.254.171.129", "name": "bhaul-ap-u50", "wifi_channel": 157, "status": "Connected", "wifi_phy": "wifi2", "motion_enabled": true, "tx_bytes": "8780783496", "type": "WIFI_AP"}, {"routes": [], "status": "Connected", "rx_bytes": "441761266", "tx_bytes": "738", "mac": "f2:48:9a:db:7b:0c", "name": "br-home.upnp", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "eth0", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "60:b4:f7:f1:51:10", "ip": ""}], "ap_bssid_2ghz": "e2:b4:f7:f1:51:12", "gateway_bssid": "00:c8:8b:61:b4:49", "p2p_bssid": "", "mesh_bssid": "d2:b4:f7:f1:51:14", "links": [{"dhcp_expire": "", "mac": "24:18:1d:7f:13:97", "wifi_protocol": "dhcp", "if_name": "", "hostname": "Galaxy-S9", "dhcp_id": "1,3,6,15,26,28,51,58,59,43", "motion_type": "MOTION_NONE", "ifname": "dhcp", "ip": "192.168.11.35"}, {"dhcp_expire": "", "mac": "6c:96:cf:d8:d2:c7", "wifi_protocol": "dhcp", "if_name": "", "hostname": "Ivanas-MBP-2", "dhcp_id": "1,121,3,6,15,119,252,95,44,46", "motion_type": "MOTION_NONE", "ifname": "dhcp", "ip": "192.168.11.28"}, {"dhcp_expire": "", "mac": "f4:5c:89:ac:d9:c1", "wifi_protocol": "dhcp", "if_name": "", "hostname": "Rades-MBP-3", "dhcp_id": "1,121,3,6,15,119,252,95,44,46", "motion_type": "MOTION_NONE", "ifname": "dhcp", "ip": "192.168.11.27"}, {"dhcp_expire": "", "mac": "54:99:63:b6:2c:c2", "wifi_protocol": "dhcp", "if_name": "", "hostname": "Marijas-iPhone", "dhcp_id": "1,121,3,6,15,119,252", "motion_type": "MOTION_NONE", "ifname": "dhcp", "ip": "192.168.11.25"}, {"vht_supported": "0", "vht_capabilities": "0x00000000", "wifi_txpwr": "15.000", "rx_bytes": "44856702", "max_rx_streams": "1", "phy": "wifi0", "implicit_dsss": "0", "rssi": "-59", "rssi_db": "-59", "implicit_legacy_80_80": "0", "peer_type": "2", "uptime": "451182518", "last_heard": "0", "cv_matrix_report_count": "0", "csi_report_count": "0", "wifi_protocol": "802_11", "if_name": "home-ap-24", "hostname": "ESP_E6796A", "aid": "49153", "v_matrix_report_count": "0", "motion_state": "1", "mac": "68:c6:3a:e6:79:6a", "implicit_legacy_80": "0", "rate_ms": "100", "tx_failed": "0", "ht_capabilities": "0x0000112c", "connected_time": "451182454", "implicit_legacy_20": "4037390", "implicit_error_count": "253740", "implicit_bw_downgrades": "0", "implicit_legacy_160": "0", "mconf_zero_count": 607435, "tx_bytes": "3880669575", "tx_bitrate": "72000000", "dhcp_expire": "", "ht_supported": "8", "rx_bitrate": "54000000", "implicit_measurements": "4037390", "dhcp_id": "1,3,28,6,15,44,46,47,31,33,121,43", "implicit_cck": "0", "tx_retries": "0", "ip": "192.168.11.14", "implicit_legacy_40": "0"}, {"wifi_protocol": "WIRED", "motion_type": "MOTION_NONE", "mac": "00:c8:8b:61:b4:49", "if_name": "br-wan", "ip": "192.168.10.1"}, {"dhcp_expire": "", "mac": "c0:b6:58:58:fd:b4", "wifi_protocol": "dhcp", "if_name": "", "hostname": "iPhoneXs-iPhone", "dhcp_id": "1,121,3,6,15,119,252", "motion_type": "MOTION_NONE", "ifname": "dhcp", "ip": "192.168.11.37"}, {"dhcp_expire": "", "mac": "60:b4:f7:f1:51:52", "wifi_protocol": "dhcp", "if_name": "", "hostname": "4C72401397_Pod_900200600", "dhcp_id": "1,3,6,12,15,28,43", "motion_type": "MOTION_NONE", "ifname": "dhcp", "ip": "192.168.11.15"}, {"dhcp_expire": "", "mac": "60:b4:f7:f1:51:d0", "wifi_protocol": "dhcp", "if_name": "", "hostname": "4C724013AC_Pod_900200600", "dhcp_id": "1,3,6,12,15,28,43", "motion_type": "MOTION_NONE", "ifname": "dhcp", "ip": "192.168.11.16"}, {"dhcp_expire": "", "mac": "c0:bd:d1:9e:c1:d3", "wifi_protocol": "dhcp", "if_name": "", "hostname": "", "dhcp_id": "1,3,6,15,26,28,51,58,59,43", "motion_type": "MOTION_NONE", "ifname": "dhcp", "ip": "192.168.11.43"}, {"vht_supported": "0", "vht_capabilities": "0x338379f2", "wifi_txpwr": "15.000", "rx_bytes": "3480890467", "max_rx_streams": "4", "phy": "wifi2", "implicit_dsss": "0", "rssi": "-27", "rssi_db": "-27", "implicit_legacy_80_80": "0", "peer_type": "7", "uptime": "451131011", "last_heard": "0", "cv_matrix_report_count": "0", "csi_report_count": "0", "wifi_protocol": "802_11", "if_name": "bhaul-ap-u50", "hostname": "4C72401397_Pod_900200600", "aid": "49153", "v_matrix_report_count": "0", "motion_state": "1", "mac": "60:b4:f7:f1:51:56", "implicit_legacy_80": "4341720", "rate_ms": "100", "tx_failed": "0", "ht_capabilities": "0x000009ef", "connected_time": "451130946", "implicit_legacy_20": "3041", "implicit_error_count": "79091", "implicit_bw_downgrades": "3041", "implicit_legacy_160": "0", "mconf_zero_count": 35830, "tx_bytes": "1960724648", "tx_bitrate": "1733000000", "dhcp_expire": "", "ht_supported": "8", "rx_bitrate": "1733000000", "implicit_measurements": "4344761", "dhcp_id": "1,3,6,12,15,28,43", "implicit_cck": "0", "tx_retries": "0", "ip": "169.254.171.143", "implicit_legacy_40": "0"}, {"dhcp_expire": "", "mac": "18:65:90:cf:00:33", "wifi_protocol": "dhcp", "if_name": "", "hostname": "Marijas-MBP", "dhcp_id": "1,121,3,6,15,119,252,95,44,46", "motion_type": "MOTION_NONE", "ifname": "dhcp", "ip": "192.168.11.26"}, {"vht_supported": "0", "vht_capabilities": "0x338379f2", "wifi_txpwr": "15.000", "rx_bytes": "1407214328", "max_rx_streams": "4", "phy": "wifi2", "implicit_dsss": "0", "rssi": "-23", "rssi_db": "-23", "implicit_legacy_80_80": "0", "peer_type": "7", "uptime": "178399372", "last_heard": "0", "cv_matrix_report_count": "0", "csi_report_count": "0", "wifi_protocol": "802_11", "if_name": "bhaul-ap-u50", "hostname": "4C724013AC_Pod_900200600", "aid": "49154", "v_matrix_report_count": "0", "motion_state": "1", "mac": "60:b4:f7:f1:51:d4", "implicit_legacy_80": "1723675", "rate_ms": "100", "tx_failed": "0", "ht_capabilities": "0x000009ef", "connected_time": "178399308", "implicit_legacy_20": "639", "implicit_error_count": "25928", "implicit_bw_downgrades": "639", "implicit_legacy_160": "0", "mconf_zero_count": 249642, "tx_bytes": "1637755362", "tx_bitrate": "1560000000", "dhcp_expire": "", "ht_supported": "8", "rx_bitrate": "1300000000", "implicit_measurements": "1724314", "dhcp_id": "1,3,6,12,15,28,43", "implicit_cck": "0", "tx_retries": "0", "ip": "169.254.171.16", "implicit_legacy_40": "0"}], "_age": 0, "ts": 1575049011.25, "node_id": "4C7240138C", "uptime": "451300.93", "fw_version": "221-uv3.4.2-kv3.4.2-15b78b5b3c79653c0fee0b6469c977a5894de54b-qca-wifi-cfr-dev", "deviceId": "csi-p-60b4f7f15110", "root_mode": 2, "location_id": "5d2e1d18fba27931c16e941d", "version": {"radios": {"wifi2": {"fw_version": "0.0.0.9999", "chipset": "QCA9984"}, "wifi1": {"fw_version": "0.0.0.9999", "chipset": "QCA4019"}, "wifi0": {"fw_version": "0.0.0.9999", "chipset": "QCA4019"}}, "algos": {"omot": "1.9.2"}}, "hw_id": "Qualcomm", "hw_version": "Plume SuperPod B1A", "status_time": 0.52, "mem": {"free": "276284", "avail": "318828", "total": "496180"}, "load": ["0.96", "1.21", "1.37"], "ap_bssid_5ghz": "e2:b4:f7:f1:51:14"}, "4C72401397": {"interfaces": [{"routes": [], "name": "eth1", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "60:b4:f7:f1:51:53", "ip": ""}, {"routes": [], "status": "Connected", "rx_bytes": "441740240", "tx_bytes": "330174", "mac": "ee:85:63:db:4a:c3", "name": "br-home.tx", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "eth1.4", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "60:b4:f7:f1:51:53", "ip": ""}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.172.128"}], "mac": "d2:b4:f7:f1:51:56", "rx_bytes": "0", "ip": "169.254.172.129", "name": "bhaul-ap-u50", "wifi_channel": 157, "status": "Connected", "wifi_phy": "wifi2", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.4.0"}], "mac": "f2:b4:f7:f1:51:54", "rx_bytes": "0", "ip": "169.254.4.1", "name": "onboard-ap-24", "wifi_channel": 11, "status": "Connected", "wifi_phy": "wifi0", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [], "status": "Connected", "rx_bytes": "0", "tx_bytes": "0", "mac": "62:b4:f7:f1:51:56", "name": "g-bhaul-sta-u50", "ip": "", "type": "ETHERNET"}, {"routes": [], "status": "Connected", "rx_bytes": "441741192", "tx_bytes": "738", "mac": "4e:ce:ff:dd:de:75", "name": "br-home.dpi", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "ifb0", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "06:51:c8:9f:38:9b", "ip": ""}, {"routes": [], "status": "Connected", "rx_bytes": "471444", "tx_bytes": "738", "mac": "86:4a:36:aa:d8:d4", "name": "br-home.dns", "ip": "", "type": "ETHERNET"}, {"routes": [], "status": "Connected", "rx_bytes": "441741308", "tx_bytes": "738", "mac": "22:c5:23:65:cf:3f", "name": "br-home.dhcp", "ip": "", "type": "ETHERNET"}, {"routes": [], "status": "Connected", "rx_bytes": "441742108", "tx_bytes": "738", "mac": "f6:75:12:94:d2:44", "name": "br-home.l2uf", "ip": "", "type": "ETHERNET"}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.171.128"}], "mac": "60:b4:f7:f1:51:56", "rx_bytes": "3437897932", "ip": "169.254.171.143", "name": "bhaul-sta-u50", "wifi_channel": 157, "status": "Connected", "wifi_phy": "wifi2", "motion_enabled": true, "tx_bytes": "12601404375", "type": "WIFI_CLIENT"}, {"routes": [], "mac": "e2:b4:f7:f1:51:54", "rx_bytes": "551517", "ip": "", "name": "home-ap-24", "wifi_channel": 11, "status": "Connected", "wifi_phy": "wifi0", "motion_enabled": true, "tx_bytes": "1473300", "type": "WIFI_AP"}, {"routes": [], "name": "br-gre-24", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "4a:b6:71:00:f2:4d", "ip": ""}, {"routes": [], "name": "ifb1", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "3e:d9:6c:08:b4:14", "ip": ""}, {"routes": [], "name": "bond0", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "ae:1c:bf:1e:ca:6a", "ip": ""}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.5.128"}], "mac": "d2:b4:f7:f1:51:55", "rx_bytes": "0", "ip": "169.254.5.129", "name": "bhaul-ap-l50", "wifi_channel": 60, "status": "Connected", "wifi_phy": "wifi1", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [], "status": "Connected", "rx_bytes": "10462", "tx_bytes": "738", "mac": "8a:ed:81:6f:6d:7f", "name": "br-home.http", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "eth0.4", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "60:b4:f7:f1:51:52", "ip": ""}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.5.0"}], "mac": "f2:b4:f7:f1:51:55", "rx_bytes": "0", "ip": "169.254.5.1", "name": "onboard-ap-l50", "wifi_channel": 60, "status": "Connected", "wifi_phy": "wifi1", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.172.0"}], "mac": "f2:b4:f7:f1:51:56", "rx_bytes": "0", "ip": "169.254.172.1", "name": "onboard-ap-u50", "wifi_channel": 157, "status": "Connected", "wifi_phy": "wifi2", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [], "name": "ovs-system", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "22:b2:0a:c1:4b:53", "ip": ""}, {"routes": [], "status": "Connected", "rx_bytes": "441741564", "tx_bytes": "738", "mac": "62:b4:f7:f1:51:52", "name": "br-home", "ip": "", "type": "ETHERNET"}, {"routes": [{"gateway": "0.0.0.0", "netmask": "255.255.255.128", "metric": "0", "dst": "169.254.4.128"}], "mac": "d2:b4:f7:f1:51:54", "rx_bytes": "0", "ip": "169.254.4.129", "name": "bhaul-ap-24", "wifi_channel": 11, "status": "Connected", "wifi_phy": "wifi0", "motion_enabled": true, "tx_bytes": "0", "type": "WIFI_AP"}, {"routes": [{"gateway": "192.168.10.1", "netmask": "0.0.0.0", "metric": "0", "dst": "0.0.0.0"}, {"gateway": "0.0.0.0", "netmask": "255.255.254.0", "metric": "0", "dst": "192.168.10.0"}], "status": "Connected", "rx_bytes": "2476802713", "tx_bytes": "11644910197", "mac": "60:b4:f7:f1:51:52", "name": "br-wan", "ip": "192.168.11.15", "type": "ETHERNET"}, {"routes": [], "mac": "e2:b4:f7:f1:51:55", "rx_bytes": "49542823", "ip": "", "name": "home-ap-l50", "wifi_channel": 60, "status": "Connected", "wifi_phy": "wifi1", "motion_enabled": true, "tx_bytes": "393988310", "type": "WIFI_AP"}, {"routes": [], "name": "br-gre-50", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "62:9f:93:0a:68:42", "ip": ""}, {"routes": [], "status": "Connected", "rx_bytes": "441740208", "tx_bytes": "738", "mac": "46:54:d3:1b:85:c8", "name": "br-home.upnp", "ip": "", "type": "ETHERNET"}, {"routes": [], "name": "eth0", "rx_bytes": "0", "type": "ETHERNET", "tx_bytes": "0", "mac": "60:b4:f7:f1:51:52", "ip": ""}], "ap_bssid_2ghz": "e2:b4:f7:f1:51:54", "gateway_bssid": "00:c8:8b:61:b4:49", "p2p_bssid": "", "mesh_bssid": "60:b4:f7:f1:51:56", "links": [{"vht_supported": "0", "vht_capabilities": "0x338b79f2", "wifi_txpwr": "15.000", "rx_bytes": "1748959776", "phy": "wifi2", "implicit_dsss": "0", "rssi": "-27", "rssi_db": "-27", "implicit_legacy_80_80": "0", "uptime": "451152362", "tx_failed": "0", "cv_matrix_report_count": "0", "csi_report_count": "0", "tx_retries": "0", "if_name": "bhaul-sta-u50", "aid": "0", "v_matrix_report_count": "0", "motion_state": "1", "mac": "d2:b4:f7:f1:51:14", "implicit_legacy_80": "4388656", "implicit_legacy_20": "1196", "rate_ms": "100", "ht_capabilities": "0x000009ef", "connected_time": "451152351", "implicit_legacy_40": "0", "implicit_error_count": "59261", "implicit_bw_downgrades": "1196", "implicit_legacy_160": "0", "max_rx_streams": "4", "tx_bytes": "2866029898", "tx_bitrate": "1733000000", "mconf_zero_count": 53596, "wifi_protocol": "802_11", "ht_supported": "8", "rx_bitrate": "1733000000", "implicit_measurements": "4389852", "implicit_cck": "0", "last_heard": "0", "ip": "169.254.171.129", "peer_type": "7"}, {"wifi_protocol": "WIRED", "motion_type": "MOTION_NONE", "mac": "00:c8:8b:61:b4:49", "if_name": "br-wan", "ip": "192.168.10.1"}], "_age": 0, "ts": 1575049032.09, "node_id": "4C72401397", "uptime": "451602.77", "fw_version": "221-uv3.4.2-kv3.4.2-15b78b5b3c79653c0fee0b6469c977a5894de54b-qca-wifi-cfr-dev", "deviceId": "csi-p-60b4f7f15152", "root_mode": 1, "location_id": "5d2e1d18fba27931c16e941d", "version": {"radios": {"wifi2": {"fw_version": "0.0.0.9999", "chipset": "QCA9984"}, "wifi1": {"fw_version": "0.0.0.9999", "chipset": "QCA4019"}, "wifi0": {"fw_version": "0.0.0.9999", "chipset": "QCA4019"}}, "algos": {"omot": "1.9.2"}}, "hw_id": "Qualcomm", "hw_version": "Plume SuperPod B1A", "status_time": 0.41, "mem": {"free": "285080", "avail": "327968", "total": "496180"}, "load": ["0.52", "0.53", "0.48"], "ap_bssid_5ghz": "e2:b4:f7:f1:51:55"}}}
